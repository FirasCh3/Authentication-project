{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nexport let SignupComponent = class SignupComponent {\n  constructor(Request) {\n    this.Request = Request;\n    this.group = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required),\n      passwordconfirm: new FormControl('', [Validators.required]),\n      CheckBox: new FormControl('', [Validators.required])\n    }, [], [this.Validate.bind(this), this.CheckPassword.bind(this)]);\n  }\n  CheckPassword(control) {\n    let promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let password = control.value.password;\n        console.log(password);\n        console.log(control.value.passwordconfirm);\n        if (password && control.value.passwordconfirm && password != control.value.passwordconfirm) {\n          resolve({\n            PassError: \"invalid\"\n          });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n    return promise;\n  }\n  CheckEmail(result, email) {\n    if (email == '') {\n      return true;\n    }\n    let ok = true;\n    result.forEach(function (element) {\n      if (element.email == email) {\n        ok = false;\n      }\n    });\n    return ok;\n  }\n  Validate(control) {\n    let results;\n    this.Request.GetAllUsers().subscribe(data => {\n      results = data;\n    });\n    let promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log(this.group.controls.email.value);\n        if (!this.CheckEmail(results, control.value.email)) {\n          resolve({\n            EmailError: \"true\"\n          });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n    return promise;\n  }\n  submit() {\n    console.log(this.group);\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","SignupComponent","constructor","Request","group","name","required","email","password","passwordconfirm","CheckBox","Validate","bind","CheckPassword","control","promise","Promise","resolve","reject","setTimeout","value","console","log","PassError","CheckEmail","result","ok","forEach","element","results","GetAllUsers","subscribe","data","controls","EmailError","submit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\user\\Desktop\\SpringBootProject\\src\\main\\resources\\my-app\\src\\app\\signup\\signup.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {resolve} from \"@angular/compiler-cli\";\nimport {httpRequests} from \"../http\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n  constructor(private Request:httpRequests) {\n  }\n  group=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    email:new FormControl('',[Validators.required,Validators.email]),\n    password:new FormControl('',Validators.required),\n    passwordconfirm:new FormControl('',[Validators.required]),\n    CheckBox:new FormControl('',[Validators.required]),\n  },[],[this.Validate.bind(this),this.CheckPassword.bind(this)]);\n  CheckPassword(control:AbstractControl):Promise<any>|Observable<any>{\n    let promise=new Promise((resolve,reject)=>{\n      setTimeout(()=>{\n        let password=control.value.password;\n        console.log(password);\n        console.log(control.value.passwordconfirm);\n        if(password && control.value.passwordconfirm && password!=control.value.passwordconfirm){\n          resolve({PassError:\"invalid\"});\n        }else{\n          resolve(null);\n        }\n\n      },1000)\n\n\n    })\n    return promise;\n  }\n  CheckEmail(result:any,email:any):boolean{\n    if(email==''){\n      return true;\n    }\n    let ok:boolean=true;\n    result.forEach(function (element:any){\n      if(element.email==email){\n        ok=false;\n      }\n    })\n    return ok;\n  }\n  Validate(control:AbstractControl):Promise<any>|Observable<any>{\n    let results:any\n    this.Request.GetAllUsers().subscribe((data)=>{\n       results=data;\n    })\n    let promise=new Promise((resolve,reject)=>{\n      setTimeout(()=>{\n        console.log(this.group.controls.email.value);\n        if(!this.CheckEmail(results,control.value.email)){\n          resolve({EmailError:\"true\"})\n        }\n        else{\n          resolve(null);\n        }\n      },1000)\n\n\n    })\n    return promise;\n  }\n  submit(){\n    console.log(this.group);\n\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}