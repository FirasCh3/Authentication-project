{"ast":null,"code":"import { createRequire as __cjsCompatRequire } from 'module';\nconst require = __cjsCompatRequire(import.meta.url);\nimport { LogicalProjectPath, absoluteFrom, absoluteFromSourceFile, dirname, getFileSystem, relative, resolve, stripExtension, toRelativeImport } from \"./chunk-EC5K6QPP.js\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/util/src/typescript.mjs\nimport ts from \"typescript\";\nvar TS = /\\.tsx?$/i;\nvar D_TS = /\\.d\\.ts$/i;\nfunction isSymbolWithValueDeclaration(symbol) {\n  return symbol != null && symbol.valueDeclaration !== void 0 && symbol.declarations !== void 0;\n}\nfunction isDtsPath(filePath) {\n  return D_TS.test(filePath);\n}\nfunction isNonDeclarationTsPath(filePath) {\n  return TS.test(filePath) && !D_TS.test(filePath);\n}\nfunction isFromDtsFile(node) {\n  let sf = node.getSourceFile();\n  if (sf === void 0) {\n    sf = ts.getOriginalNode(node).getSourceFile();\n  }\n  return sf !== void 0 && sf.isDeclarationFile;\n}\nfunction nodeNameForError(node) {\n  if (node.name !== void 0 && ts.isIdentifier(node.name)) {\n    return node.name.text;\n  } else {\n    const kind = ts.SyntaxKind[node.kind];\n    const {\n      line,\n      character\n    } = ts.getLineAndCharacterOfPosition(node.getSourceFile(), node.getStart());\n    return `${kind}@${line}:${character}`;\n  }\n}\nfunction getSourceFile(node) {\n  const directSf = node.getSourceFile();\n  return directSf !== void 0 ? directSf : ts.getOriginalNode(node).getSourceFile();\n}\nfunction getSourceFileOrNull(program, fileName) {\n  return program.getSourceFile(fileName) || null;\n}\nfunction getTokenAtPosition(sf, pos) {\n  return ts.getTokenAtPosition(sf, pos);\n}\nfunction identifierOfNode(decl) {\n  if (decl.name !== void 0 && ts.isIdentifier(decl.name)) {\n    return decl.name;\n  } else {\n    return null;\n  }\n}\nfunction isDeclaration(node) {\n  return isValueDeclaration(node) || isTypeDeclaration(node);\n}\nfunction isValueDeclaration(node) {\n  return ts.isClassDeclaration(node) || ts.isFunctionDeclaration(node) || ts.isVariableDeclaration(node);\n}\nfunction isTypeDeclaration(node) {\n  return ts.isEnumDeclaration(node) || ts.isTypeAliasDeclaration(node) || ts.isInterfaceDeclaration(node);\n}\nfunction isNamedDeclaration(node) {\n  const namedNode = node;\n  return namedNode.name !== void 0 && ts.isIdentifier(namedNode.name);\n}\nfunction getRootDirs(host, options) {\n  const rootDirs = [];\n  const cwd = host.getCurrentDirectory();\n  const fs = getFileSystem();\n  if (options.rootDirs !== void 0) {\n    rootDirs.push(...options.rootDirs);\n  } else if (options.rootDir !== void 0) {\n    rootDirs.push(options.rootDir);\n  } else {\n    rootDirs.push(cwd);\n  }\n  return rootDirs.map(rootDir => fs.resolve(cwd, host.getCanonicalFileName(rootDir)));\n}\nfunction nodeDebugInfo(node) {\n  const sf = getSourceFile(node);\n  const {\n    line,\n    character\n  } = ts.getLineAndCharacterOfPosition(sf, node.pos);\n  return `[${sf.fileName}: ${ts.SyntaxKind[node.kind]} @ ${line}:${character}]`;\n}\nfunction resolveModuleName(moduleName, containingFile, compilerOptions, compilerHost, moduleResolutionCache) {\n  if (compilerHost.resolveModuleNames) {\n    return compilerHost.resolveModuleNames([moduleName], containingFile, void 0, void 0, compilerOptions)[0];\n  } else {\n    return ts.resolveModuleName(moduleName, containingFile, compilerOptions, compilerHost, moduleResolutionCache !== null ? moduleResolutionCache : void 0).resolvedModule;\n  }\n}\nfunction isAssignment(node) {\n  return ts.isBinaryExpression(node) && node.operatorToken.kind === ts.SyntaxKind.EqualsToken;\n}\nfunction toUnredirectedSourceFile(sf) {\n  const redirectInfo = sf.redirectInfo;\n  if (redirectInfo === void 0) {\n    return sf;\n  }\n  return redirectInfo.unredirected;\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/references.mjs\nvar Reference = class {\n  constructor(node, bestGuessOwningModule = null) {\n    this.node = node;\n    this.identifiers = [];\n    this.synthetic = false;\n    this._alias = null;\n    this.bestGuessOwningModule = bestGuessOwningModule;\n    const id = identifierOfNode(node);\n    if (id !== null) {\n      this.identifiers.push(id);\n    }\n  }\n  get ownedByModuleGuess() {\n    if (this.bestGuessOwningModule !== null) {\n      return this.bestGuessOwningModule.specifier;\n    } else {\n      return null;\n    }\n  }\n  get hasOwningModuleGuess() {\n    return this.bestGuessOwningModule !== null;\n  }\n  get debugName() {\n    const id = identifierOfNode(this.node);\n    return id !== null ? id.text : null;\n  }\n  get alias() {\n    return this._alias;\n  }\n  addIdentifier(identifier) {\n    this.identifiers.push(identifier);\n  }\n  getIdentityIn(context) {\n    return this.identifiers.find(id => id.getSourceFile() === context) || null;\n  }\n  getIdentityInExpression(expr) {\n    const sf = expr.getSourceFile();\n    return this.identifiers.find(id => {\n      if (id.getSourceFile() !== sf) {\n        return false;\n      }\n      return id.pos >= expr.pos && id.end <= expr.end;\n    }) || null;\n  }\n  getOriginForDiagnostics(container, fallback = container) {\n    const id = this.getIdentityInExpression(container);\n    return id !== null ? id : fallback;\n  }\n  cloneWithAlias(alias) {\n    const ref = new Reference(this.node, this.bestGuessOwningModule);\n    ref.identifiers = [...this.identifiers];\n    ref._alias = alias;\n    return ref;\n  }\n  cloneWithNoIdentifiers() {\n    const ref = new Reference(this.node, this.bestGuessOwningModule);\n    ref._alias = this._alias;\n    ref.identifiers = [];\n    return ref;\n  }\n};\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/alias.mjs\nimport { ExternalExpr as ExternalExpr2 } from \"@angular/compiler\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/emitter.mjs\nimport { ExternalExpr, ExternalReference, WrappedNodeExpr } from \"@angular/compiler\";\nimport ts3 from \"typescript\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/error_code.mjs\nvar ErrorCode;\n(function (ErrorCode2) {\n  ErrorCode2[ErrorCode2[\"DECORATOR_ARG_NOT_LITERAL\"] = 1001] = \"DECORATOR_ARG_NOT_LITERAL\";\n  ErrorCode2[ErrorCode2[\"DECORATOR_ARITY_WRONG\"] = 1002] = \"DECORATOR_ARITY_WRONG\";\n  ErrorCode2[ErrorCode2[\"DECORATOR_NOT_CALLED\"] = 1003] = \"DECORATOR_NOT_CALLED\";\n  ErrorCode2[ErrorCode2[\"DECORATOR_UNEXPECTED\"] = 1005] = \"DECORATOR_UNEXPECTED\";\n  ErrorCode2[ErrorCode2[\"DECORATOR_COLLISION\"] = 1006] = \"DECORATOR_COLLISION\";\n  ErrorCode2[ErrorCode2[\"VALUE_HAS_WRONG_TYPE\"] = 1010] = \"VALUE_HAS_WRONG_TYPE\";\n  ErrorCode2[ErrorCode2[\"VALUE_NOT_LITERAL\"] = 1011] = \"VALUE_NOT_LITERAL\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_MISSING_TEMPLATE\"] = 2001] = \"COMPONENT_MISSING_TEMPLATE\";\n  ErrorCode2[ErrorCode2[\"PIPE_MISSING_NAME\"] = 2002] = \"PIPE_MISSING_NAME\";\n  ErrorCode2[ErrorCode2[\"PARAM_MISSING_TOKEN\"] = 2003] = \"PARAM_MISSING_TOKEN\";\n  ErrorCode2[ErrorCode2[\"DIRECTIVE_MISSING_SELECTOR\"] = 2004] = \"DIRECTIVE_MISSING_SELECTOR\";\n  ErrorCode2[ErrorCode2[\"UNDECORATED_PROVIDER\"] = 2005] = \"UNDECORATED_PROVIDER\";\n  ErrorCode2[ErrorCode2[\"DIRECTIVE_INHERITS_UNDECORATED_CTOR\"] = 2006] = \"DIRECTIVE_INHERITS_UNDECORATED_CTOR\";\n  ErrorCode2[ErrorCode2[\"UNDECORATED_CLASS_USING_ANGULAR_FEATURES\"] = 2007] = \"UNDECORATED_CLASS_USING_ANGULAR_FEATURES\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_RESOURCE_NOT_FOUND\"] = 2008] = \"COMPONENT_RESOURCE_NOT_FOUND\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_INVALID_SHADOW_DOM_SELECTOR\"] = 2009] = \"COMPONENT_INVALID_SHADOW_DOM_SELECTOR\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_NOT_STANDALONE\"] = 2010] = \"COMPONENT_NOT_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_IMPORT_NOT_STANDALONE\"] = 2011] = \"COMPONENT_IMPORT_NOT_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_UNKNOWN_IMPORT\"] = 2012] = \"COMPONENT_UNKNOWN_IMPORT\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_INVALID\"] = 2013] = \"HOST_DIRECTIVE_INVALID\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_NOT_STANDALONE\"] = 2014] = \"HOST_DIRECTIVE_NOT_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_COMPONENT\"] = 2015] = \"HOST_DIRECTIVE_COMPONENT\";\n  ErrorCode2[ErrorCode2[\"INJECTABLE_INHERITS_INVALID_CONSTRUCTOR\"] = 2016] = \"INJECTABLE_INHERITS_INVALID_CONSTRUCTOR\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_UNDEFINED_BINDING\"] = 2017] = \"HOST_DIRECTIVE_UNDEFINED_BINDING\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_CONFLICTING_ALIAS\"] = 2018] = \"HOST_DIRECTIVE_CONFLICTING_ALIAS\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_MISSING_REQUIRED_BINDING\"] = 2019] = \"HOST_DIRECTIVE_MISSING_REQUIRED_BINDING\";\n  ErrorCode2[ErrorCode2[\"CONFLICTING_INPUT_TRANSFORM\"] = 2020] = \"CONFLICTING_INPUT_TRANSFORM\";\n  ErrorCode2[ErrorCode2[\"SYMBOL_NOT_EXPORTED\"] = 3001] = \"SYMBOL_NOT_EXPORTED\";\n  ErrorCode2[ErrorCode2[\"IMPORT_CYCLE_DETECTED\"] = 3003] = \"IMPORT_CYCLE_DETECTED\";\n  ErrorCode2[ErrorCode2[\"IMPORT_GENERATION_FAILURE\"] = 3004] = \"IMPORT_GENERATION_FAILURE\";\n  ErrorCode2[ErrorCode2[\"CONFIG_FLAT_MODULE_NO_INDEX\"] = 4001] = \"CONFIG_FLAT_MODULE_NO_INDEX\";\n  ErrorCode2[ErrorCode2[\"CONFIG_STRICT_TEMPLATES_IMPLIES_FULL_TEMPLATE_TYPECHECK\"] = 4002] = \"CONFIG_STRICT_TEMPLATES_IMPLIES_FULL_TEMPLATE_TYPECHECK\";\n  ErrorCode2[ErrorCode2[\"CONFIG_EXTENDED_DIAGNOSTICS_IMPLIES_STRICT_TEMPLATES\"] = 4003] = \"CONFIG_EXTENDED_DIAGNOSTICS_IMPLIES_STRICT_TEMPLATES\";\n  ErrorCode2[ErrorCode2[\"CONFIG_EXTENDED_DIAGNOSTICS_UNKNOWN_CATEGORY_LABEL\"] = 4004] = \"CONFIG_EXTENDED_DIAGNOSTICS_UNKNOWN_CATEGORY_LABEL\";\n  ErrorCode2[ErrorCode2[\"CONFIG_EXTENDED_DIAGNOSTICS_UNKNOWN_CHECK\"] = 4005] = \"CONFIG_EXTENDED_DIAGNOSTICS_UNKNOWN_CHECK\";\n  ErrorCode2[ErrorCode2[\"HOST_BINDING_PARSE_ERROR\"] = 5001] = \"HOST_BINDING_PARSE_ERROR\";\n  ErrorCode2[ErrorCode2[\"TEMPLATE_PARSE_ERROR\"] = 5002] = \"TEMPLATE_PARSE_ERROR\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_INVALID_DECLARATION\"] = 6001] = \"NGMODULE_INVALID_DECLARATION\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_INVALID_IMPORT\"] = 6002] = \"NGMODULE_INVALID_IMPORT\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_INVALID_EXPORT\"] = 6003] = \"NGMODULE_INVALID_EXPORT\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_INVALID_REEXPORT\"] = 6004] = \"NGMODULE_INVALID_REEXPORT\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_MODULE_WITH_PROVIDERS_MISSING_GENERIC\"] = 6005] = \"NGMODULE_MODULE_WITH_PROVIDERS_MISSING_GENERIC\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_REEXPORT_NAME_COLLISION\"] = 6006] = \"NGMODULE_REEXPORT_NAME_COLLISION\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_DECLARATION_NOT_UNIQUE\"] = 6007] = \"NGMODULE_DECLARATION_NOT_UNIQUE\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_DECLARATION_IS_STANDALONE\"] = 6008] = \"NGMODULE_DECLARATION_IS_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_BOOTSTRAP_IS_STANDALONE\"] = 6009] = \"NGMODULE_BOOTSTRAP_IS_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"WARN_NGMODULE_ID_UNNECESSARY\"] = 6100] = \"WARN_NGMODULE_ID_UNNECESSARY\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_VE_DEPENDENCY_ON_IVY_LIB\"] = 6999] = \"NGMODULE_VE_DEPENDENCY_ON_IVY_LIB\";\n  ErrorCode2[ErrorCode2[\"SCHEMA_INVALID_ELEMENT\"] = 8001] = \"SCHEMA_INVALID_ELEMENT\";\n  ErrorCode2[ErrorCode2[\"SCHEMA_INVALID_ATTRIBUTE\"] = 8002] = \"SCHEMA_INVALID_ATTRIBUTE\";\n  ErrorCode2[ErrorCode2[\"MISSING_REFERENCE_TARGET\"] = 8003] = \"MISSING_REFERENCE_TARGET\";\n  ErrorCode2[ErrorCode2[\"MISSING_PIPE\"] = 8004] = \"MISSING_PIPE\";\n  ErrorCode2[ErrorCode2[\"WRITE_TO_READ_ONLY_VARIABLE\"] = 8005] = \"WRITE_TO_READ_ONLY_VARIABLE\";\n  ErrorCode2[ErrorCode2[\"DUPLICATE_VARIABLE_DECLARATION\"] = 8006] = \"DUPLICATE_VARIABLE_DECLARATION\";\n  ErrorCode2[ErrorCode2[\"SPLIT_TWO_WAY_BINDING\"] = 8007] = \"SPLIT_TWO_WAY_BINDING\";\n  ErrorCode2[ErrorCode2[\"MISSING_REQUIRED_INPUTS\"] = 8008] = \"MISSING_REQUIRED_INPUTS\";\n  ErrorCode2[ErrorCode2[\"INVALID_BANANA_IN_BOX\"] = 8101] = \"INVALID_BANANA_IN_BOX\";\n  ErrorCode2[ErrorCode2[\"NULLISH_COALESCING_NOT_NULLABLE\"] = 8102] = \"NULLISH_COALESCING_NOT_NULLABLE\";\n  ErrorCode2[ErrorCode2[\"MISSING_CONTROL_FLOW_DIRECTIVE\"] = 8103] = \"MISSING_CONTROL_FLOW_DIRECTIVE\";\n  ErrorCode2[ErrorCode2[\"TEXT_ATTRIBUTE_NOT_BINDING\"] = 8104] = \"TEXT_ATTRIBUTE_NOT_BINDING\";\n  ErrorCode2[ErrorCode2[\"MISSING_NGFOROF_LET\"] = 8105] = \"MISSING_NGFOROF_LET\";\n  ErrorCode2[ErrorCode2[\"SUFFIX_NOT_SUPPORTED\"] = 8106] = \"SUFFIX_NOT_SUPPORTED\";\n  ErrorCode2[ErrorCode2[\"OPTIONAL_CHAIN_NOT_NULLABLE\"] = 8107] = \"OPTIONAL_CHAIN_NOT_NULLABLE\";\n  ErrorCode2[ErrorCode2[\"SKIP_HYDRATION_NOT_STATIC\"] = 8108] = \"SKIP_HYDRATION_NOT_STATIC\";\n  ErrorCode2[ErrorCode2[\"INLINE_TCB_REQUIRED\"] = 8900] = \"INLINE_TCB_REQUIRED\";\n  ErrorCode2[ErrorCode2[\"INLINE_TYPE_CTOR_REQUIRED\"] = 8901] = \"INLINE_TYPE_CTOR_REQUIRED\";\n  ErrorCode2[ErrorCode2[\"INJECTABLE_DUPLICATE_PROV\"] = 9001] = \"INJECTABLE_DUPLICATE_PROV\";\n  ErrorCode2[ErrorCode2[\"SUGGEST_STRICT_TEMPLATES\"] = 10001] = \"SUGGEST_STRICT_TEMPLATES\";\n  ErrorCode2[ErrorCode2[\"SUGGEST_SUBOPTIMAL_TYPE_INFERENCE\"] = 10002] = \"SUGGEST_SUBOPTIMAL_TYPE_INFERENCE\";\n})(ErrorCode || (ErrorCode = {}));\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/docs.mjs\nvar COMPILER_ERRORS_WITH_GUIDES = /* @__PURE__ */new Set([ErrorCode.DECORATOR_ARG_NOT_LITERAL, ErrorCode.IMPORT_CYCLE_DETECTED, ErrorCode.PARAM_MISSING_TOKEN, ErrorCode.SCHEMA_INVALID_ELEMENT, ErrorCode.SCHEMA_INVALID_ATTRIBUTE, ErrorCode.MISSING_REFERENCE_TARGET, ErrorCode.COMPONENT_INVALID_SHADOW_DOM_SELECTOR, ErrorCode.WARN_NGMODULE_ID_UNNECESSARY]);\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/error.mjs\nimport ts2 from \"typescript\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/util.mjs\nvar ERROR_CODE_MATCHER = /(\\u001b\\[\\d+m ?)TS-99(\\d+: ?\\u001b\\[\\d+m)/g;\nfunction replaceTsWithNgInErrors(errors) {\n  return errors.replace(ERROR_CODE_MATCHER, \"$1NG$2\");\n}\nfunction ngErrorCode(code) {\n  return parseInt(\"-99\" + code);\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/error.mjs\nvar FatalDiagnosticError = class {\n  constructor(code, node, message, relatedInformation) {\n    this.code = code;\n    this.node = node;\n    this.message = message;\n    this.relatedInformation = relatedInformation;\n    this._isFatalDiagnosticError = true;\n  }\n  toDiagnostic() {\n    return makeDiagnostic(this.code, this.node, this.message, this.relatedInformation);\n  }\n};\nfunction makeDiagnostic(code, node, messageText, relatedInformation) {\n  node = ts2.getOriginalNode(node);\n  return {\n    category: ts2.DiagnosticCategory.Error,\n    code: ngErrorCode(code),\n    file: ts2.getOriginalNode(node).getSourceFile(),\n    start: node.getStart(void 0, false),\n    length: node.getWidth(),\n    messageText,\n    relatedInformation\n  };\n}\nfunction makeDiagnosticChain(messageText, next) {\n  return {\n    category: ts2.DiagnosticCategory.Message,\n    code: 0,\n    messageText,\n    next\n  };\n}\nfunction makeRelatedInformation(node, messageText) {\n  node = ts2.getOriginalNode(node);\n  return {\n    category: ts2.DiagnosticCategory.Message,\n    code: 0,\n    file: node.getSourceFile(),\n    start: node.getStart(),\n    length: node.getWidth(),\n    messageText\n  };\n}\nfunction addDiagnosticChain(messageText, add) {\n  if (typeof messageText === \"string\") {\n    return makeDiagnosticChain(messageText, add);\n  }\n  if (messageText.next === void 0) {\n    messageText.next = add;\n  } else {\n    messageText.next.push(...add);\n  }\n  return messageText;\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/error_details_base_url.mjs\nvar ERROR_DETAILS_PAGE_BASE_URL = \"https://angular.io/errors\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/extended_template_diagnostic_name.mjs\nvar ExtendedTemplateDiagnosticName;\n(function (ExtendedTemplateDiagnosticName2) {\n  ExtendedTemplateDiagnosticName2[\"INVALID_BANANA_IN_BOX\"] = \"invalidBananaInBox\";\n  ExtendedTemplateDiagnosticName2[\"NULLISH_COALESCING_NOT_NULLABLE\"] = \"nullishCoalescingNotNullable\";\n  ExtendedTemplateDiagnosticName2[\"OPTIONAL_CHAIN_NOT_NULLABLE\"] = \"optionalChainNotNullable\";\n  ExtendedTemplateDiagnosticName2[\"MISSING_CONTROL_FLOW_DIRECTIVE\"] = \"missingControlFlowDirective\";\n  ExtendedTemplateDiagnosticName2[\"TEXT_ATTRIBUTE_NOT_BINDING\"] = \"textAttributeNotBinding\";\n  ExtendedTemplateDiagnosticName2[\"MISSING_NGFOROF_LET\"] = \"missingNgForOfLet\";\n  ExtendedTemplateDiagnosticName2[\"SUFFIX_NOT_SUPPORTED\"] = \"suffixNotSupported\";\n  ExtendedTemplateDiagnosticName2[\"SKIP_HYDRATION_NOT_STATIC\"] = \"skipHydrationNotStatic\";\n})(ExtendedTemplateDiagnosticName || (ExtendedTemplateDiagnosticName = {}));\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/find_export.mjs\nfunction findExportedNameOfNode(target, file, reflector) {\n  const exports = reflector.getExportsOfModule(file);\n  if (exports === null) {\n    return null;\n  }\n  const declaredName = isNamedDeclaration(target) ? target.name.text : null;\n  let foundExportName = null;\n  for (const [exportName, declaration] of exports) {\n    if (declaration.node !== target) {\n      continue;\n    }\n    if (exportName === declaredName) {\n      return exportName;\n    }\n    foundExportName = exportName;\n  }\n  return foundExportName;\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/emitter.mjs\nvar ImportFlags;\n(function (ImportFlags2) {\n  ImportFlags2[ImportFlags2[\"None\"] = 0] = \"None\";\n  ImportFlags2[ImportFlags2[\"ForceNewImport\"] = 1] = \"ForceNewImport\";\n  ImportFlags2[ImportFlags2[\"NoAliasing\"] = 2] = \"NoAliasing\";\n  ImportFlags2[ImportFlags2[\"AllowTypeImports\"] = 4] = \"AllowTypeImports\";\n  ImportFlags2[ImportFlags2[\"AllowRelativeDtsImports\"] = 8] = \"AllowRelativeDtsImports\";\n})(ImportFlags || (ImportFlags = {}));\nfunction assertSuccessfulReferenceEmit(result, origin, typeKind) {\n  if (result.kind === 0) {\n    return;\n  }\n  const message = makeDiagnosticChain(`Unable to import ${typeKind} ${nodeNameForError(result.ref.node)}.`, [makeDiagnosticChain(result.reason)]);\n  throw new FatalDiagnosticError(ErrorCode.IMPORT_GENERATION_FAILURE, origin, message, [makeRelatedInformation(result.ref.node, `The ${typeKind} is declared here.`)]);\n}\nvar ReferenceEmitter = class {\n  constructor(strategies) {\n    this.strategies = strategies;\n  }\n  emit(ref, context, importFlags = ImportFlags.None) {\n    for (const strategy of this.strategies) {\n      const emitted = strategy.emit(ref, context, importFlags);\n      if (emitted !== null) {\n        return emitted;\n      }\n    }\n    return {\n      kind: 1,\n      ref,\n      context,\n      reason: `Unable to write a reference to ${nodeNameForError(ref.node)}.`\n    };\n  }\n};\nvar LocalIdentifierStrategy = class {\n  emit(ref, context, importFlags) {\n    const refSf = getSourceFile(ref.node);\n    if (importFlags & ImportFlags.ForceNewImport && refSf !== context) {\n      return null;\n    }\n    if (!isDeclaration(ref.node) && refSf === context) {\n      return {\n        kind: 0,\n        expression: new WrappedNodeExpr(ref.node),\n        importedFile: null\n      };\n    }\n    const identifier = ref.getIdentityIn(context);\n    if (identifier !== null) {\n      return {\n        kind: 0,\n        expression: new WrappedNodeExpr(identifier),\n        importedFile: null\n      };\n    } else {\n      return null;\n    }\n  }\n};\nvar AbsoluteModuleStrategy = class {\n  constructor(program, checker, moduleResolver, reflectionHost) {\n    this.program = program;\n    this.checker = checker;\n    this.moduleResolver = moduleResolver;\n    this.reflectionHost = reflectionHost;\n    this.moduleExportsCache = /* @__PURE__ */new Map();\n  }\n  emit(ref, context, importFlags) {\n    if (ref.bestGuessOwningModule === null) {\n      return null;\n    } else if (!isDeclaration(ref.node)) {\n      throw new Error(`Debug assert: unable to import a Reference to non-declaration of type ${ts3.SyntaxKind[ref.node.kind]}.`);\n    } else if ((importFlags & ImportFlags.AllowTypeImports) === 0 && isTypeDeclaration(ref.node)) {\n      throw new Error(`Importing a type-only declaration of type ${ts3.SyntaxKind[ref.node.kind]} in a value position is not allowed.`);\n    }\n    const {\n      specifier,\n      resolutionContext\n    } = ref.bestGuessOwningModule;\n    const exports = this.getExportsOfModule(specifier, resolutionContext);\n    if (exports.module === null) {\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The module '${specifier}' could not be found.`\n      };\n    } else if (exports.exportMap === null || !exports.exportMap.has(ref.node)) {\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The symbol is not exported from ${exports.module.fileName} (module '${specifier}').`\n      };\n    }\n    const symbolName = exports.exportMap.get(ref.node);\n    return {\n      kind: 0,\n      expression: new ExternalExpr(new ExternalReference(specifier, symbolName)),\n      importedFile: exports.module\n    };\n  }\n  getExportsOfModule(moduleName, fromFile) {\n    if (!this.moduleExportsCache.has(moduleName)) {\n      this.moduleExportsCache.set(moduleName, this.enumerateExportsOfModule(moduleName, fromFile));\n    }\n    return this.moduleExportsCache.get(moduleName);\n  }\n  enumerateExportsOfModule(specifier, fromFile) {\n    const entryPointFile = this.moduleResolver.resolveModule(specifier, fromFile);\n    if (entryPointFile === null) {\n      return {\n        module: null,\n        exportMap: null\n      };\n    }\n    const exports = this.reflectionHost.getExportsOfModule(entryPointFile);\n    if (exports === null) {\n      return {\n        module: entryPointFile,\n        exportMap: null\n      };\n    }\n    const exportMap = /* @__PURE__ */new Map();\n    for (const [name, declaration] of exports) {\n      if (exportMap.has(declaration.node)) {\n        const existingExport = exportMap.get(declaration.node);\n        if (isNamedDeclaration(declaration.node) && declaration.node.name.text === existingExport) {\n          continue;\n        }\n      }\n      exportMap.set(declaration.node, name);\n    }\n    return {\n      module: entryPointFile,\n      exportMap\n    };\n  }\n};\nvar LogicalProjectStrategy = class {\n  constructor(reflector, logicalFs) {\n    this.reflector = reflector;\n    this.logicalFs = logicalFs;\n    this.relativePathStrategy = new RelativePathStrategy(this.reflector);\n  }\n  emit(ref, context, importFlags) {\n    const destSf = getSourceFile(ref.node);\n    const destPath = this.logicalFs.logicalPathOfSf(destSf);\n    if (destPath === null) {\n      if (destSf.isDeclarationFile && importFlags & ImportFlags.AllowRelativeDtsImports) {\n        return this.relativePathStrategy.emit(ref, context);\n      }\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The file ${destSf.fileName} is outside of the configured 'rootDir'.`\n      };\n    }\n    const originPath = this.logicalFs.logicalPathOfSf(context);\n    if (originPath === null) {\n      throw new Error(`Debug assert: attempt to import from ${context.fileName} but it's outside the program?`);\n    }\n    if (destPath === originPath) {\n      return null;\n    }\n    const name = findExportedNameOfNode(ref.node, destSf, this.reflector);\n    if (name === null) {\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The symbol is not exported from ${destSf.fileName}.`\n      };\n    }\n    const moduleName = LogicalProjectPath.relativePathBetween(originPath, destPath);\n    return {\n      kind: 0,\n      expression: new ExternalExpr({\n        moduleName,\n        name\n      }),\n      importedFile: destSf\n    };\n  }\n};\nvar RelativePathStrategy = class {\n  constructor(reflector) {\n    this.reflector = reflector;\n  }\n  emit(ref, context) {\n    const destSf = getSourceFile(ref.node);\n    const relativePath = relative(dirname(absoluteFromSourceFile(context)), absoluteFromSourceFile(destSf));\n    const moduleName = toRelativeImport(stripExtension(relativePath));\n    const name = findExportedNameOfNode(ref.node, destSf, this.reflector);\n    if (name === null) {\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The symbol is not exported from ${destSf.fileName}.`\n      };\n    }\n    return {\n      kind: 0,\n      expression: new ExternalExpr({\n        moduleName,\n        name\n      }),\n      importedFile: destSf\n    };\n  }\n};\nvar UnifiedModulesStrategy = class {\n  constructor(reflector, unifiedModulesHost) {\n    this.reflector = reflector;\n    this.unifiedModulesHost = unifiedModulesHost;\n  }\n  emit(ref, context) {\n    const destSf = getSourceFile(ref.node);\n    const name = findExportedNameOfNode(ref.node, destSf, this.reflector);\n    if (name === null) {\n      return null;\n    }\n    const moduleName = this.unifiedModulesHost.fileNameToModuleName(destSf.fileName, context.fileName);\n    return {\n      kind: 0,\n      expression: new ExternalExpr({\n        moduleName,\n        name\n      }),\n      importedFile: destSf\n    };\n  }\n};\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/alias.mjs\nvar CHARS_TO_ESCAPE = /[^a-zA-Z0-9/_]/g;\nvar UnifiedModulesAliasingHost = class {\n  constructor(unifiedModulesHost) {\n    this.unifiedModulesHost = unifiedModulesHost;\n    this.aliasExportsInDts = false;\n  }\n  maybeAliasSymbolAs(ref, context, ngModuleName, isReExport) {\n    if (!isReExport) {\n      return null;\n    }\n    return this.aliasName(ref.node, context);\n  }\n  getAliasIn(decl, via, isReExport) {\n    if (!isReExport) {\n      return null;\n    }\n    const moduleName = this.unifiedModulesHost.fileNameToModuleName(via.fileName, via.fileName);\n    return new ExternalExpr2({\n      moduleName,\n      name: this.aliasName(decl, via)\n    });\n  }\n  aliasName(decl, context) {\n    const declModule = this.unifiedModulesHost.fileNameToModuleName(decl.getSourceFile().fileName, context.fileName);\n    const replaced = declModule.replace(CHARS_TO_ESCAPE, \"_\").replace(/\\//g, \"$\");\n    return \"\\u0275ng$\" + replaced + \"$$\" + decl.name.text;\n  }\n};\nvar PrivateExportAliasingHost = class {\n  constructor(host) {\n    this.host = host;\n    this.aliasExportsInDts = true;\n  }\n  maybeAliasSymbolAs(ref, context, ngModuleName) {\n    if (ref.hasOwningModuleGuess) {\n      return null;\n    }\n    const exports = this.host.getExportsOfModule(context);\n    if (exports === null) {\n      throw new Error(`Could not determine the exports of: ${context.fileName}`);\n    }\n    let found = false;\n    exports.forEach(value => {\n      if (value.node === ref.node) {\n        found = true;\n      }\n    });\n    if (found) {\n      return null;\n    }\n    return `\\u0275ngExport\\u0275${ngModuleName}\\u0275${ref.node.name.text}`;\n  }\n  getAliasIn() {\n    return null;\n  }\n};\nvar AliasStrategy = class {\n  emit(ref, context, importMode) {\n    if (importMode & ImportFlags.NoAliasing || ref.alias === null) {\n      return null;\n    }\n    return {\n      kind: 0,\n      expression: ref.alias,\n      importedFile: \"unknown\"\n    };\n  }\n};\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/util/src/path.mjs\nfunction relativePathBetween(from, to) {\n  const relativePath = stripExtension(relative(dirname(resolve(from)), resolve(to)));\n  return relativePath !== \"\" ? toRelativeImport(relativePath) : null;\n}\nfunction normalizeSeparators(path) {\n  return path.replace(/\\\\/g, \"/\");\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/core.mjs\nvar NoopImportRewriter = class {\n  shouldImportSymbol(symbol, specifier) {\n    return true;\n  }\n  rewriteSymbol(symbol, specifier) {\n    return symbol;\n  }\n  rewriteSpecifier(specifier, inContextOfFile) {\n    return specifier;\n  }\n};\nvar CORE_SUPPORTED_SYMBOLS = /* @__PURE__ */new Map([[\"\\u0275\\u0275defineInjectable\", \"\\u0275\\u0275defineInjectable\"], [\"\\u0275\\u0275defineInjector\", \"\\u0275\\u0275defineInjector\"], [\"\\u0275\\u0275defineNgModule\", \"\\u0275\\u0275defineNgModule\"], [\"\\u0275\\u0275setNgModuleScope\", \"\\u0275\\u0275setNgModuleScope\"], [\"\\u0275\\u0275inject\", \"\\u0275\\u0275inject\"], [\"\\u0275\\u0275FactoryDeclaration\", \"\\u0275\\u0275FactoryDeclaration\"], [\"\\u0275setClassMetadata\", \"setClassMetadata\"], [\"\\u0275\\u0275InjectableDeclaration\", \"\\u0275\\u0275InjectableDeclaration\"], [\"\\u0275\\u0275InjectorDeclaration\", \"\\u0275\\u0275InjectorDeclaration\"], [\"\\u0275\\u0275NgModuleDeclaration\", \"\\u0275\\u0275NgModuleDeclaration\"], [\"\\u0275NgModuleFactory\", \"NgModuleFactory\"], [\"\\u0275noSideEffects\", \"\\u0275noSideEffects\"]]);\nvar CORE_MODULE = \"@angular/core\";\nvar R3SymbolsImportRewriter = class {\n  constructor(r3SymbolsPath) {\n    this.r3SymbolsPath = r3SymbolsPath;\n  }\n  shouldImportSymbol(symbol, specifier) {\n    return true;\n  }\n  rewriteSymbol(symbol, specifier) {\n    if (specifier !== CORE_MODULE) {\n      return symbol;\n    }\n    return validateAndRewriteCoreSymbol(symbol);\n  }\n  rewriteSpecifier(specifier, inContextOfFile) {\n    if (specifier !== CORE_MODULE) {\n      return specifier;\n    }\n    const relativePathToR3Symbols = relativePathBetween(inContextOfFile, this.r3SymbolsPath);\n    if (relativePathToR3Symbols === null) {\n      throw new Error(`Failed to rewrite import inside ${CORE_MODULE}: ${inContextOfFile} -> ${this.r3SymbolsPath}`);\n    }\n    return relativePathToR3Symbols;\n  }\n};\nfunction validateAndRewriteCoreSymbol(name) {\n  if (!CORE_SUPPORTED_SYMBOLS.has(name)) {\n    throw new Error(`Importing unexpected symbol ${name} while compiling ${CORE_MODULE}`);\n  }\n  return CORE_SUPPORTED_SYMBOLS.get(name);\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/patch_alias_reference_resolution.mjs\nimport ts4 from \"typescript\";\nvar patchedReferencedAliasesSymbol = Symbol(\"patchedReferencedAliases\");\nfunction loadIsReferencedAliasDeclarationPatch(context) {\n  if (!isTransformationContextWithEmitResolver(context)) {\n    throwIncompatibleTransformationContextError();\n  }\n  const emitResolver = context.getEmitResolver();\n  const existingReferencedAliases = emitResolver[patchedReferencedAliasesSymbol];\n  if (existingReferencedAliases !== void 0) {\n    return existingReferencedAliases;\n  }\n  const originalIsReferencedAliasDeclaration = emitResolver.isReferencedAliasDeclaration;\n  if (originalIsReferencedAliasDeclaration === void 0) {\n    throwIncompatibleTransformationContextError();\n  }\n  const referencedAliases = /* @__PURE__ */new Set();\n  emitResolver.isReferencedAliasDeclaration = function (node, ...args) {\n    if (isAliasImportDeclaration(node) && referencedAliases.has(node)) {\n      return true;\n    }\n    return originalIsReferencedAliasDeclaration.call(emitResolver, node, ...args);\n  };\n  return emitResolver[patchedReferencedAliasesSymbol] = referencedAliases;\n}\nfunction isAliasImportDeclaration(node) {\n  return ts4.isImportSpecifier(node) || ts4.isNamespaceImport(node) || ts4.isImportClause(node);\n}\nfunction isTransformationContextWithEmitResolver(context) {\n  return context.getEmitResolver !== void 0;\n}\nfunction throwIncompatibleTransformationContextError() {\n  throw Error(\"Angular compiler is incompatible with this version of the TypeScript compiler.\\n\\nIf you recently updated TypeScript and this issue surfaces now, consider downgrading.\\n\\nPlease report an issue on the Angular repositories when this issue surfaces and you are using a supposedly compatible TypeScript version.\");\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/default.mjs\nvar DefaultImportDeclaration = Symbol(\"DefaultImportDeclaration\");\nfunction attachDefaultImportDeclaration(expr, importDecl) {\n  expr[DefaultImportDeclaration] = importDecl;\n}\nfunction getDefaultImportDeclaration(expr) {\n  var _a;\n  return (_a = expr[DefaultImportDeclaration]) != null ? _a : null;\n}\nvar DefaultImportTracker = class {\n  constructor() {\n    this.sourceFileToUsedImports = /* @__PURE__ */new Map();\n  }\n  recordUsedImport(importDecl) {\n    if (importDecl.importClause) {\n      const sf = getSourceFile(importDecl);\n      if (!this.sourceFileToUsedImports.has(sf.fileName)) {\n        this.sourceFileToUsedImports.set(sf.fileName, /* @__PURE__ */new Set());\n      }\n      this.sourceFileToUsedImports.get(sf.fileName).add(importDecl.importClause);\n    }\n  }\n  importPreservingTransformer() {\n    return context => {\n      let clausesToPreserve = null;\n      return sourceFile => {\n        const clausesForFile = this.sourceFileToUsedImports.get(sourceFile.fileName);\n        if (clausesForFile !== void 0) {\n          for (const clause of clausesForFile) {\n            if (clausesToPreserve === null) {\n              clausesToPreserve = loadIsReferencedAliasDeclarationPatch(context);\n            }\n            clausesToPreserve.add(clause);\n          }\n        }\n        return sourceFile;\n      };\n    };\n  }\n};\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/resolver.mjs\nvar ModuleResolver = class {\n  constructor(program, compilerOptions, host, moduleResolutionCache) {\n    this.program = program;\n    this.compilerOptions = compilerOptions;\n    this.host = host;\n    this.moduleResolutionCache = moduleResolutionCache;\n  }\n  resolveModule(moduleName, containingFile) {\n    const resolved = resolveModuleName(moduleName, containingFile, this.compilerOptions, this.host, this.moduleResolutionCache);\n    if (resolved === void 0) {\n      return null;\n    }\n    return getSourceFileOrNull(this.program, absoluteFrom(resolved.resolvedFileName));\n  }\n};\nexport { ErrorCode, COMPILER_ERRORS_WITH_GUIDES, replaceTsWithNgInErrors, ngErrorCode, FatalDiagnosticError, makeDiagnostic, makeDiagnosticChain, makeRelatedInformation, addDiagnosticChain, ERROR_DETAILS_PAGE_BASE_URL, ExtendedTemplateDiagnosticName, isSymbolWithValueDeclaration, isDtsPath, isNonDeclarationTsPath, isFromDtsFile, nodeNameForError, getSourceFile, getSourceFileOrNull, getTokenAtPosition, identifierOfNode, isDeclaration, getRootDirs, nodeDebugInfo, isAssignment, toUnredirectedSourceFile, ImportFlags, assertSuccessfulReferenceEmit, ReferenceEmitter, LocalIdentifierStrategy, AbsoluteModuleStrategy, LogicalProjectStrategy, RelativePathStrategy, UnifiedModulesStrategy, UnifiedModulesAliasingHost, PrivateExportAliasingHost, AliasStrategy, relativePathBetween, normalizeSeparators, NoopImportRewriter, R3SymbolsImportRewriter, loadIsReferencedAliasDeclarationPatch, isAliasImportDeclaration, attachDefaultImportDeclaration, getDefaultImportDeclaration, DefaultImportTracker, Reference, ModuleResolver };\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */","map":{"version":3,"names":["createRequire","__cjsCompatRequire","require","import","meta","url","LogicalProjectPath","absoluteFrom","absoluteFromSourceFile","dirname","getFileSystem","relative","resolve","stripExtension","toRelativeImport","ts","TS","D_TS","isSymbolWithValueDeclaration","symbol","valueDeclaration","declarations","isDtsPath","filePath","test","isNonDeclarationTsPath","isFromDtsFile","node","sf","getSourceFile","getOriginalNode","isDeclarationFile","nodeNameForError","name","isIdentifier","text","kind","SyntaxKind","line","character","getLineAndCharacterOfPosition","getStart","directSf","getSourceFileOrNull","program","fileName","getTokenAtPosition","pos","identifierOfNode","decl","isDeclaration","isValueDeclaration","isTypeDeclaration","isClassDeclaration","isFunctionDeclaration","isVariableDeclaration","isEnumDeclaration","isTypeAliasDeclaration","isInterfaceDeclaration","isNamedDeclaration","namedNode","getRootDirs","host","options","rootDirs","cwd","getCurrentDirectory","fs","push","rootDir","map","getCanonicalFileName","nodeDebugInfo","resolveModuleName","moduleName","containingFile","compilerOptions","compilerHost","moduleResolutionCache","resolveModuleNames","resolvedModule","isAssignment","isBinaryExpression","operatorToken","EqualsToken","toUnredirectedSourceFile","redirectInfo","unredirected","Reference","constructor","bestGuessOwningModule","identifiers","synthetic","_alias","id","ownedByModuleGuess","specifier","hasOwningModuleGuess","debugName","alias","addIdentifier","identifier","getIdentityIn","context","find","getIdentityInExpression","expr","end","getOriginForDiagnostics","container","fallback","cloneWithAlias","ref","cloneWithNoIdentifiers","ExternalExpr","ExternalExpr2","ExternalReference","WrappedNodeExpr","ts3","ErrorCode","ErrorCode2","COMPILER_ERRORS_WITH_GUIDES","Set","DECORATOR_ARG_NOT_LITERAL","IMPORT_CYCLE_DETECTED","PARAM_MISSING_TOKEN","SCHEMA_INVALID_ELEMENT","SCHEMA_INVALID_ATTRIBUTE","MISSING_REFERENCE_TARGET","COMPONENT_INVALID_SHADOW_DOM_SELECTOR","WARN_NGMODULE_ID_UNNECESSARY","ts2","ERROR_CODE_MATCHER","replaceTsWithNgInErrors","errors","replace","ngErrorCode","code","parseInt","FatalDiagnosticError","message","relatedInformation","_isFatalDiagnosticError","toDiagnostic","makeDiagnostic","messageText","category","DiagnosticCategory","Error","file","start","length","getWidth","makeDiagnosticChain","next","Message","makeRelatedInformation","addDiagnosticChain","add","ERROR_DETAILS_PAGE_BASE_URL","ExtendedTemplateDiagnosticName","ExtendedTemplateDiagnosticName2","findExportedNameOfNode","target","reflector","exports","getExportsOfModule","declaredName","foundExportName","exportName","declaration","ImportFlags","ImportFlags2","assertSuccessfulReferenceEmit","result","origin","typeKind","reason","IMPORT_GENERATION_FAILURE","ReferenceEmitter","strategies","emit","importFlags","None","strategy","emitted","LocalIdentifierStrategy","refSf","ForceNewImport","expression","importedFile","AbsoluteModuleStrategy","checker","moduleResolver","reflectionHost","moduleExportsCache","Map","AllowTypeImports","resolutionContext","module","exportMap","has","symbolName","get","fromFile","set","enumerateExportsOfModule","entryPointFile","resolveModule","existingExport","LogicalProjectStrategy","logicalFs","relativePathStrategy","RelativePathStrategy","destSf","destPath","logicalPathOfSf","AllowRelativeDtsImports","originPath","relativePathBetween","relativePath","UnifiedModulesStrategy","unifiedModulesHost","fileNameToModuleName","CHARS_TO_ESCAPE","UnifiedModulesAliasingHost","aliasExportsInDts","maybeAliasSymbolAs","ngModuleName","isReExport","aliasName","getAliasIn","via","declModule","replaced","PrivateExportAliasingHost","found","forEach","value","AliasStrategy","importMode","NoAliasing","from","to","normalizeSeparators","path","NoopImportRewriter","shouldImportSymbol","rewriteSymbol","rewriteSpecifier","inContextOfFile","CORE_SUPPORTED_SYMBOLS","CORE_MODULE","R3SymbolsImportRewriter","r3SymbolsPath","validateAndRewriteCoreSymbol","relativePathToR3Symbols","ts4","patchedReferencedAliasesSymbol","Symbol","loadIsReferencedAliasDeclarationPatch","isTransformationContextWithEmitResolver","throwIncompatibleTransformationContextError","emitResolver","getEmitResolver","existingReferencedAliases","originalIsReferencedAliasDeclaration","isReferencedAliasDeclaration","referencedAliases","args","isAliasImportDeclaration","call","isImportSpecifier","isNamespaceImport","isImportClause","DefaultImportDeclaration","attachDefaultImportDeclaration","importDecl","getDefaultImportDeclaration","_a","DefaultImportTracker","sourceFileToUsedImports","recordUsedImport","importClause","importPreservingTransformer","clausesToPreserve","sourceFile","clausesForFile","clause","ModuleResolver","resolved","resolvedFileName"],"sources":["C:/Users/user/Desktop/SpringBootProject/src/main/resources/my-app/node_modules/@angular/compiler-cli/bundles/chunk-KPIJL3UY.js"],"sourcesContent":["\n      import {createRequire as __cjsCompatRequire} from 'module';\n      const require = __cjsCompatRequire(import.meta.url);\n    \nimport {\n  LogicalProjectPath,\n  absoluteFrom,\n  absoluteFromSourceFile,\n  dirname,\n  getFileSystem,\n  relative,\n  resolve,\n  stripExtension,\n  toRelativeImport\n} from \"./chunk-EC5K6QPP.js\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/util/src/typescript.mjs\nimport ts from \"typescript\";\nvar TS = /\\.tsx?$/i;\nvar D_TS = /\\.d\\.ts$/i;\nfunction isSymbolWithValueDeclaration(symbol) {\n  return symbol != null && symbol.valueDeclaration !== void 0 && symbol.declarations !== void 0;\n}\nfunction isDtsPath(filePath) {\n  return D_TS.test(filePath);\n}\nfunction isNonDeclarationTsPath(filePath) {\n  return TS.test(filePath) && !D_TS.test(filePath);\n}\nfunction isFromDtsFile(node) {\n  let sf = node.getSourceFile();\n  if (sf === void 0) {\n    sf = ts.getOriginalNode(node).getSourceFile();\n  }\n  return sf !== void 0 && sf.isDeclarationFile;\n}\nfunction nodeNameForError(node) {\n  if (node.name !== void 0 && ts.isIdentifier(node.name)) {\n    return node.name.text;\n  } else {\n    const kind = ts.SyntaxKind[node.kind];\n    const { line, character } = ts.getLineAndCharacterOfPosition(node.getSourceFile(), node.getStart());\n    return `${kind}@${line}:${character}`;\n  }\n}\nfunction getSourceFile(node) {\n  const directSf = node.getSourceFile();\n  return directSf !== void 0 ? directSf : ts.getOriginalNode(node).getSourceFile();\n}\nfunction getSourceFileOrNull(program, fileName) {\n  return program.getSourceFile(fileName) || null;\n}\nfunction getTokenAtPosition(sf, pos) {\n  return ts.getTokenAtPosition(sf, pos);\n}\nfunction identifierOfNode(decl) {\n  if (decl.name !== void 0 && ts.isIdentifier(decl.name)) {\n    return decl.name;\n  } else {\n    return null;\n  }\n}\nfunction isDeclaration(node) {\n  return isValueDeclaration(node) || isTypeDeclaration(node);\n}\nfunction isValueDeclaration(node) {\n  return ts.isClassDeclaration(node) || ts.isFunctionDeclaration(node) || ts.isVariableDeclaration(node);\n}\nfunction isTypeDeclaration(node) {\n  return ts.isEnumDeclaration(node) || ts.isTypeAliasDeclaration(node) || ts.isInterfaceDeclaration(node);\n}\nfunction isNamedDeclaration(node) {\n  const namedNode = node;\n  return namedNode.name !== void 0 && ts.isIdentifier(namedNode.name);\n}\nfunction getRootDirs(host, options) {\n  const rootDirs = [];\n  const cwd = host.getCurrentDirectory();\n  const fs = getFileSystem();\n  if (options.rootDirs !== void 0) {\n    rootDirs.push(...options.rootDirs);\n  } else if (options.rootDir !== void 0) {\n    rootDirs.push(options.rootDir);\n  } else {\n    rootDirs.push(cwd);\n  }\n  return rootDirs.map((rootDir) => fs.resolve(cwd, host.getCanonicalFileName(rootDir)));\n}\nfunction nodeDebugInfo(node) {\n  const sf = getSourceFile(node);\n  const { line, character } = ts.getLineAndCharacterOfPosition(sf, node.pos);\n  return `[${sf.fileName}: ${ts.SyntaxKind[node.kind]} @ ${line}:${character}]`;\n}\nfunction resolveModuleName(moduleName, containingFile, compilerOptions, compilerHost, moduleResolutionCache) {\n  if (compilerHost.resolveModuleNames) {\n    return compilerHost.resolveModuleNames(\n      [moduleName],\n      containingFile,\n      void 0,\n      void 0,\n      compilerOptions\n    )[0];\n  } else {\n    return ts.resolveModuleName(moduleName, containingFile, compilerOptions, compilerHost, moduleResolutionCache !== null ? moduleResolutionCache : void 0).resolvedModule;\n  }\n}\nfunction isAssignment(node) {\n  return ts.isBinaryExpression(node) && node.operatorToken.kind === ts.SyntaxKind.EqualsToken;\n}\nfunction toUnredirectedSourceFile(sf) {\n  const redirectInfo = sf.redirectInfo;\n  if (redirectInfo === void 0) {\n    return sf;\n  }\n  return redirectInfo.unredirected;\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/references.mjs\nvar Reference = class {\n  constructor(node, bestGuessOwningModule = null) {\n    this.node = node;\n    this.identifiers = [];\n    this.synthetic = false;\n    this._alias = null;\n    this.bestGuessOwningModule = bestGuessOwningModule;\n    const id = identifierOfNode(node);\n    if (id !== null) {\n      this.identifiers.push(id);\n    }\n  }\n  get ownedByModuleGuess() {\n    if (this.bestGuessOwningModule !== null) {\n      return this.bestGuessOwningModule.specifier;\n    } else {\n      return null;\n    }\n  }\n  get hasOwningModuleGuess() {\n    return this.bestGuessOwningModule !== null;\n  }\n  get debugName() {\n    const id = identifierOfNode(this.node);\n    return id !== null ? id.text : null;\n  }\n  get alias() {\n    return this._alias;\n  }\n  addIdentifier(identifier) {\n    this.identifiers.push(identifier);\n  }\n  getIdentityIn(context) {\n    return this.identifiers.find((id) => id.getSourceFile() === context) || null;\n  }\n  getIdentityInExpression(expr) {\n    const sf = expr.getSourceFile();\n    return this.identifiers.find((id) => {\n      if (id.getSourceFile() !== sf) {\n        return false;\n      }\n      return id.pos >= expr.pos && id.end <= expr.end;\n    }) || null;\n  }\n  getOriginForDiagnostics(container, fallback = container) {\n    const id = this.getIdentityInExpression(container);\n    return id !== null ? id : fallback;\n  }\n  cloneWithAlias(alias) {\n    const ref = new Reference(this.node, this.bestGuessOwningModule);\n    ref.identifiers = [...this.identifiers];\n    ref._alias = alias;\n    return ref;\n  }\n  cloneWithNoIdentifiers() {\n    const ref = new Reference(this.node, this.bestGuessOwningModule);\n    ref._alias = this._alias;\n    ref.identifiers = [];\n    return ref;\n  }\n};\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/alias.mjs\nimport { ExternalExpr as ExternalExpr2 } from \"@angular/compiler\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/emitter.mjs\nimport { ExternalExpr, ExternalReference, WrappedNodeExpr } from \"@angular/compiler\";\nimport ts3 from \"typescript\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/error_code.mjs\nvar ErrorCode;\n(function(ErrorCode2) {\n  ErrorCode2[ErrorCode2[\"DECORATOR_ARG_NOT_LITERAL\"] = 1001] = \"DECORATOR_ARG_NOT_LITERAL\";\n  ErrorCode2[ErrorCode2[\"DECORATOR_ARITY_WRONG\"] = 1002] = \"DECORATOR_ARITY_WRONG\";\n  ErrorCode2[ErrorCode2[\"DECORATOR_NOT_CALLED\"] = 1003] = \"DECORATOR_NOT_CALLED\";\n  ErrorCode2[ErrorCode2[\"DECORATOR_UNEXPECTED\"] = 1005] = \"DECORATOR_UNEXPECTED\";\n  ErrorCode2[ErrorCode2[\"DECORATOR_COLLISION\"] = 1006] = \"DECORATOR_COLLISION\";\n  ErrorCode2[ErrorCode2[\"VALUE_HAS_WRONG_TYPE\"] = 1010] = \"VALUE_HAS_WRONG_TYPE\";\n  ErrorCode2[ErrorCode2[\"VALUE_NOT_LITERAL\"] = 1011] = \"VALUE_NOT_LITERAL\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_MISSING_TEMPLATE\"] = 2001] = \"COMPONENT_MISSING_TEMPLATE\";\n  ErrorCode2[ErrorCode2[\"PIPE_MISSING_NAME\"] = 2002] = \"PIPE_MISSING_NAME\";\n  ErrorCode2[ErrorCode2[\"PARAM_MISSING_TOKEN\"] = 2003] = \"PARAM_MISSING_TOKEN\";\n  ErrorCode2[ErrorCode2[\"DIRECTIVE_MISSING_SELECTOR\"] = 2004] = \"DIRECTIVE_MISSING_SELECTOR\";\n  ErrorCode2[ErrorCode2[\"UNDECORATED_PROVIDER\"] = 2005] = \"UNDECORATED_PROVIDER\";\n  ErrorCode2[ErrorCode2[\"DIRECTIVE_INHERITS_UNDECORATED_CTOR\"] = 2006] = \"DIRECTIVE_INHERITS_UNDECORATED_CTOR\";\n  ErrorCode2[ErrorCode2[\"UNDECORATED_CLASS_USING_ANGULAR_FEATURES\"] = 2007] = \"UNDECORATED_CLASS_USING_ANGULAR_FEATURES\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_RESOURCE_NOT_FOUND\"] = 2008] = \"COMPONENT_RESOURCE_NOT_FOUND\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_INVALID_SHADOW_DOM_SELECTOR\"] = 2009] = \"COMPONENT_INVALID_SHADOW_DOM_SELECTOR\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_NOT_STANDALONE\"] = 2010] = \"COMPONENT_NOT_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_IMPORT_NOT_STANDALONE\"] = 2011] = \"COMPONENT_IMPORT_NOT_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"COMPONENT_UNKNOWN_IMPORT\"] = 2012] = \"COMPONENT_UNKNOWN_IMPORT\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_INVALID\"] = 2013] = \"HOST_DIRECTIVE_INVALID\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_NOT_STANDALONE\"] = 2014] = \"HOST_DIRECTIVE_NOT_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_COMPONENT\"] = 2015] = \"HOST_DIRECTIVE_COMPONENT\";\n  ErrorCode2[ErrorCode2[\"INJECTABLE_INHERITS_INVALID_CONSTRUCTOR\"] = 2016] = \"INJECTABLE_INHERITS_INVALID_CONSTRUCTOR\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_UNDEFINED_BINDING\"] = 2017] = \"HOST_DIRECTIVE_UNDEFINED_BINDING\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_CONFLICTING_ALIAS\"] = 2018] = \"HOST_DIRECTIVE_CONFLICTING_ALIAS\";\n  ErrorCode2[ErrorCode2[\"HOST_DIRECTIVE_MISSING_REQUIRED_BINDING\"] = 2019] = \"HOST_DIRECTIVE_MISSING_REQUIRED_BINDING\";\n  ErrorCode2[ErrorCode2[\"CONFLICTING_INPUT_TRANSFORM\"] = 2020] = \"CONFLICTING_INPUT_TRANSFORM\";\n  ErrorCode2[ErrorCode2[\"SYMBOL_NOT_EXPORTED\"] = 3001] = \"SYMBOL_NOT_EXPORTED\";\n  ErrorCode2[ErrorCode2[\"IMPORT_CYCLE_DETECTED\"] = 3003] = \"IMPORT_CYCLE_DETECTED\";\n  ErrorCode2[ErrorCode2[\"IMPORT_GENERATION_FAILURE\"] = 3004] = \"IMPORT_GENERATION_FAILURE\";\n  ErrorCode2[ErrorCode2[\"CONFIG_FLAT_MODULE_NO_INDEX\"] = 4001] = \"CONFIG_FLAT_MODULE_NO_INDEX\";\n  ErrorCode2[ErrorCode2[\"CONFIG_STRICT_TEMPLATES_IMPLIES_FULL_TEMPLATE_TYPECHECK\"] = 4002] = \"CONFIG_STRICT_TEMPLATES_IMPLIES_FULL_TEMPLATE_TYPECHECK\";\n  ErrorCode2[ErrorCode2[\"CONFIG_EXTENDED_DIAGNOSTICS_IMPLIES_STRICT_TEMPLATES\"] = 4003] = \"CONFIG_EXTENDED_DIAGNOSTICS_IMPLIES_STRICT_TEMPLATES\";\n  ErrorCode2[ErrorCode2[\"CONFIG_EXTENDED_DIAGNOSTICS_UNKNOWN_CATEGORY_LABEL\"] = 4004] = \"CONFIG_EXTENDED_DIAGNOSTICS_UNKNOWN_CATEGORY_LABEL\";\n  ErrorCode2[ErrorCode2[\"CONFIG_EXTENDED_DIAGNOSTICS_UNKNOWN_CHECK\"] = 4005] = \"CONFIG_EXTENDED_DIAGNOSTICS_UNKNOWN_CHECK\";\n  ErrorCode2[ErrorCode2[\"HOST_BINDING_PARSE_ERROR\"] = 5001] = \"HOST_BINDING_PARSE_ERROR\";\n  ErrorCode2[ErrorCode2[\"TEMPLATE_PARSE_ERROR\"] = 5002] = \"TEMPLATE_PARSE_ERROR\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_INVALID_DECLARATION\"] = 6001] = \"NGMODULE_INVALID_DECLARATION\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_INVALID_IMPORT\"] = 6002] = \"NGMODULE_INVALID_IMPORT\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_INVALID_EXPORT\"] = 6003] = \"NGMODULE_INVALID_EXPORT\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_INVALID_REEXPORT\"] = 6004] = \"NGMODULE_INVALID_REEXPORT\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_MODULE_WITH_PROVIDERS_MISSING_GENERIC\"] = 6005] = \"NGMODULE_MODULE_WITH_PROVIDERS_MISSING_GENERIC\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_REEXPORT_NAME_COLLISION\"] = 6006] = \"NGMODULE_REEXPORT_NAME_COLLISION\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_DECLARATION_NOT_UNIQUE\"] = 6007] = \"NGMODULE_DECLARATION_NOT_UNIQUE\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_DECLARATION_IS_STANDALONE\"] = 6008] = \"NGMODULE_DECLARATION_IS_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_BOOTSTRAP_IS_STANDALONE\"] = 6009] = \"NGMODULE_BOOTSTRAP_IS_STANDALONE\";\n  ErrorCode2[ErrorCode2[\"WARN_NGMODULE_ID_UNNECESSARY\"] = 6100] = \"WARN_NGMODULE_ID_UNNECESSARY\";\n  ErrorCode2[ErrorCode2[\"NGMODULE_VE_DEPENDENCY_ON_IVY_LIB\"] = 6999] = \"NGMODULE_VE_DEPENDENCY_ON_IVY_LIB\";\n  ErrorCode2[ErrorCode2[\"SCHEMA_INVALID_ELEMENT\"] = 8001] = \"SCHEMA_INVALID_ELEMENT\";\n  ErrorCode2[ErrorCode2[\"SCHEMA_INVALID_ATTRIBUTE\"] = 8002] = \"SCHEMA_INVALID_ATTRIBUTE\";\n  ErrorCode2[ErrorCode2[\"MISSING_REFERENCE_TARGET\"] = 8003] = \"MISSING_REFERENCE_TARGET\";\n  ErrorCode2[ErrorCode2[\"MISSING_PIPE\"] = 8004] = \"MISSING_PIPE\";\n  ErrorCode2[ErrorCode2[\"WRITE_TO_READ_ONLY_VARIABLE\"] = 8005] = \"WRITE_TO_READ_ONLY_VARIABLE\";\n  ErrorCode2[ErrorCode2[\"DUPLICATE_VARIABLE_DECLARATION\"] = 8006] = \"DUPLICATE_VARIABLE_DECLARATION\";\n  ErrorCode2[ErrorCode2[\"SPLIT_TWO_WAY_BINDING\"] = 8007] = \"SPLIT_TWO_WAY_BINDING\";\n  ErrorCode2[ErrorCode2[\"MISSING_REQUIRED_INPUTS\"] = 8008] = \"MISSING_REQUIRED_INPUTS\";\n  ErrorCode2[ErrorCode2[\"INVALID_BANANA_IN_BOX\"] = 8101] = \"INVALID_BANANA_IN_BOX\";\n  ErrorCode2[ErrorCode2[\"NULLISH_COALESCING_NOT_NULLABLE\"] = 8102] = \"NULLISH_COALESCING_NOT_NULLABLE\";\n  ErrorCode2[ErrorCode2[\"MISSING_CONTROL_FLOW_DIRECTIVE\"] = 8103] = \"MISSING_CONTROL_FLOW_DIRECTIVE\";\n  ErrorCode2[ErrorCode2[\"TEXT_ATTRIBUTE_NOT_BINDING\"] = 8104] = \"TEXT_ATTRIBUTE_NOT_BINDING\";\n  ErrorCode2[ErrorCode2[\"MISSING_NGFOROF_LET\"] = 8105] = \"MISSING_NGFOROF_LET\";\n  ErrorCode2[ErrorCode2[\"SUFFIX_NOT_SUPPORTED\"] = 8106] = \"SUFFIX_NOT_SUPPORTED\";\n  ErrorCode2[ErrorCode2[\"OPTIONAL_CHAIN_NOT_NULLABLE\"] = 8107] = \"OPTIONAL_CHAIN_NOT_NULLABLE\";\n  ErrorCode2[ErrorCode2[\"SKIP_HYDRATION_NOT_STATIC\"] = 8108] = \"SKIP_HYDRATION_NOT_STATIC\";\n  ErrorCode2[ErrorCode2[\"INLINE_TCB_REQUIRED\"] = 8900] = \"INLINE_TCB_REQUIRED\";\n  ErrorCode2[ErrorCode2[\"INLINE_TYPE_CTOR_REQUIRED\"] = 8901] = \"INLINE_TYPE_CTOR_REQUIRED\";\n  ErrorCode2[ErrorCode2[\"INJECTABLE_DUPLICATE_PROV\"] = 9001] = \"INJECTABLE_DUPLICATE_PROV\";\n  ErrorCode2[ErrorCode2[\"SUGGEST_STRICT_TEMPLATES\"] = 10001] = \"SUGGEST_STRICT_TEMPLATES\";\n  ErrorCode2[ErrorCode2[\"SUGGEST_SUBOPTIMAL_TYPE_INFERENCE\"] = 10002] = \"SUGGEST_SUBOPTIMAL_TYPE_INFERENCE\";\n})(ErrorCode || (ErrorCode = {}));\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/docs.mjs\nvar COMPILER_ERRORS_WITH_GUIDES = /* @__PURE__ */ new Set([\n  ErrorCode.DECORATOR_ARG_NOT_LITERAL,\n  ErrorCode.IMPORT_CYCLE_DETECTED,\n  ErrorCode.PARAM_MISSING_TOKEN,\n  ErrorCode.SCHEMA_INVALID_ELEMENT,\n  ErrorCode.SCHEMA_INVALID_ATTRIBUTE,\n  ErrorCode.MISSING_REFERENCE_TARGET,\n  ErrorCode.COMPONENT_INVALID_SHADOW_DOM_SELECTOR,\n  ErrorCode.WARN_NGMODULE_ID_UNNECESSARY\n]);\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/error.mjs\nimport ts2 from \"typescript\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/util.mjs\nvar ERROR_CODE_MATCHER = /(\\u001b\\[\\d+m ?)TS-99(\\d+: ?\\u001b\\[\\d+m)/g;\nfunction replaceTsWithNgInErrors(errors) {\n  return errors.replace(ERROR_CODE_MATCHER, \"$1NG$2\");\n}\nfunction ngErrorCode(code) {\n  return parseInt(\"-99\" + code);\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/error.mjs\nvar FatalDiagnosticError = class {\n  constructor(code, node, message, relatedInformation) {\n    this.code = code;\n    this.node = node;\n    this.message = message;\n    this.relatedInformation = relatedInformation;\n    this._isFatalDiagnosticError = true;\n  }\n  toDiagnostic() {\n    return makeDiagnostic(this.code, this.node, this.message, this.relatedInformation);\n  }\n};\nfunction makeDiagnostic(code, node, messageText, relatedInformation) {\n  node = ts2.getOriginalNode(node);\n  return {\n    category: ts2.DiagnosticCategory.Error,\n    code: ngErrorCode(code),\n    file: ts2.getOriginalNode(node).getSourceFile(),\n    start: node.getStart(void 0, false),\n    length: node.getWidth(),\n    messageText,\n    relatedInformation\n  };\n}\nfunction makeDiagnosticChain(messageText, next) {\n  return {\n    category: ts2.DiagnosticCategory.Message,\n    code: 0,\n    messageText,\n    next\n  };\n}\nfunction makeRelatedInformation(node, messageText) {\n  node = ts2.getOriginalNode(node);\n  return {\n    category: ts2.DiagnosticCategory.Message,\n    code: 0,\n    file: node.getSourceFile(),\n    start: node.getStart(),\n    length: node.getWidth(),\n    messageText\n  };\n}\nfunction addDiagnosticChain(messageText, add) {\n  if (typeof messageText === \"string\") {\n    return makeDiagnosticChain(messageText, add);\n  }\n  if (messageText.next === void 0) {\n    messageText.next = add;\n  } else {\n    messageText.next.push(...add);\n  }\n  return messageText;\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/error_details_base_url.mjs\nvar ERROR_DETAILS_PAGE_BASE_URL = \"https://angular.io/errors\";\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/diagnostics/src/extended_template_diagnostic_name.mjs\nvar ExtendedTemplateDiagnosticName;\n(function(ExtendedTemplateDiagnosticName2) {\n  ExtendedTemplateDiagnosticName2[\"INVALID_BANANA_IN_BOX\"] = \"invalidBananaInBox\";\n  ExtendedTemplateDiagnosticName2[\"NULLISH_COALESCING_NOT_NULLABLE\"] = \"nullishCoalescingNotNullable\";\n  ExtendedTemplateDiagnosticName2[\"OPTIONAL_CHAIN_NOT_NULLABLE\"] = \"optionalChainNotNullable\";\n  ExtendedTemplateDiagnosticName2[\"MISSING_CONTROL_FLOW_DIRECTIVE\"] = \"missingControlFlowDirective\";\n  ExtendedTemplateDiagnosticName2[\"TEXT_ATTRIBUTE_NOT_BINDING\"] = \"textAttributeNotBinding\";\n  ExtendedTemplateDiagnosticName2[\"MISSING_NGFOROF_LET\"] = \"missingNgForOfLet\";\n  ExtendedTemplateDiagnosticName2[\"SUFFIX_NOT_SUPPORTED\"] = \"suffixNotSupported\";\n  ExtendedTemplateDiagnosticName2[\"SKIP_HYDRATION_NOT_STATIC\"] = \"skipHydrationNotStatic\";\n})(ExtendedTemplateDiagnosticName || (ExtendedTemplateDiagnosticName = {}));\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/find_export.mjs\nfunction findExportedNameOfNode(target, file, reflector) {\n  const exports = reflector.getExportsOfModule(file);\n  if (exports === null) {\n    return null;\n  }\n  const declaredName = isNamedDeclaration(target) ? target.name.text : null;\n  let foundExportName = null;\n  for (const [exportName, declaration] of exports) {\n    if (declaration.node !== target) {\n      continue;\n    }\n    if (exportName === declaredName) {\n      return exportName;\n    }\n    foundExportName = exportName;\n  }\n  return foundExportName;\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/emitter.mjs\nvar ImportFlags;\n(function(ImportFlags2) {\n  ImportFlags2[ImportFlags2[\"None\"] = 0] = \"None\";\n  ImportFlags2[ImportFlags2[\"ForceNewImport\"] = 1] = \"ForceNewImport\";\n  ImportFlags2[ImportFlags2[\"NoAliasing\"] = 2] = \"NoAliasing\";\n  ImportFlags2[ImportFlags2[\"AllowTypeImports\"] = 4] = \"AllowTypeImports\";\n  ImportFlags2[ImportFlags2[\"AllowRelativeDtsImports\"] = 8] = \"AllowRelativeDtsImports\";\n})(ImportFlags || (ImportFlags = {}));\nfunction assertSuccessfulReferenceEmit(result, origin, typeKind) {\n  if (result.kind === 0) {\n    return;\n  }\n  const message = makeDiagnosticChain(`Unable to import ${typeKind} ${nodeNameForError(result.ref.node)}.`, [makeDiagnosticChain(result.reason)]);\n  throw new FatalDiagnosticError(ErrorCode.IMPORT_GENERATION_FAILURE, origin, message, [makeRelatedInformation(result.ref.node, `The ${typeKind} is declared here.`)]);\n}\nvar ReferenceEmitter = class {\n  constructor(strategies) {\n    this.strategies = strategies;\n  }\n  emit(ref, context, importFlags = ImportFlags.None) {\n    for (const strategy of this.strategies) {\n      const emitted = strategy.emit(ref, context, importFlags);\n      if (emitted !== null) {\n        return emitted;\n      }\n    }\n    return {\n      kind: 1,\n      ref,\n      context,\n      reason: `Unable to write a reference to ${nodeNameForError(ref.node)}.`\n    };\n  }\n};\nvar LocalIdentifierStrategy = class {\n  emit(ref, context, importFlags) {\n    const refSf = getSourceFile(ref.node);\n    if (importFlags & ImportFlags.ForceNewImport && refSf !== context) {\n      return null;\n    }\n    if (!isDeclaration(ref.node) && refSf === context) {\n      return {\n        kind: 0,\n        expression: new WrappedNodeExpr(ref.node),\n        importedFile: null\n      };\n    }\n    const identifier = ref.getIdentityIn(context);\n    if (identifier !== null) {\n      return {\n        kind: 0,\n        expression: new WrappedNodeExpr(identifier),\n        importedFile: null\n      };\n    } else {\n      return null;\n    }\n  }\n};\nvar AbsoluteModuleStrategy = class {\n  constructor(program, checker, moduleResolver, reflectionHost) {\n    this.program = program;\n    this.checker = checker;\n    this.moduleResolver = moduleResolver;\n    this.reflectionHost = reflectionHost;\n    this.moduleExportsCache = /* @__PURE__ */ new Map();\n  }\n  emit(ref, context, importFlags) {\n    if (ref.bestGuessOwningModule === null) {\n      return null;\n    } else if (!isDeclaration(ref.node)) {\n      throw new Error(`Debug assert: unable to import a Reference to non-declaration of type ${ts3.SyntaxKind[ref.node.kind]}.`);\n    } else if ((importFlags & ImportFlags.AllowTypeImports) === 0 && isTypeDeclaration(ref.node)) {\n      throw new Error(`Importing a type-only declaration of type ${ts3.SyntaxKind[ref.node.kind]} in a value position is not allowed.`);\n    }\n    const { specifier, resolutionContext } = ref.bestGuessOwningModule;\n    const exports = this.getExportsOfModule(specifier, resolutionContext);\n    if (exports.module === null) {\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The module '${specifier}' could not be found.`\n      };\n    } else if (exports.exportMap === null || !exports.exportMap.has(ref.node)) {\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The symbol is not exported from ${exports.module.fileName} (module '${specifier}').`\n      };\n    }\n    const symbolName = exports.exportMap.get(ref.node);\n    return {\n      kind: 0,\n      expression: new ExternalExpr(new ExternalReference(specifier, symbolName)),\n      importedFile: exports.module\n    };\n  }\n  getExportsOfModule(moduleName, fromFile) {\n    if (!this.moduleExportsCache.has(moduleName)) {\n      this.moduleExportsCache.set(moduleName, this.enumerateExportsOfModule(moduleName, fromFile));\n    }\n    return this.moduleExportsCache.get(moduleName);\n  }\n  enumerateExportsOfModule(specifier, fromFile) {\n    const entryPointFile = this.moduleResolver.resolveModule(specifier, fromFile);\n    if (entryPointFile === null) {\n      return { module: null, exportMap: null };\n    }\n    const exports = this.reflectionHost.getExportsOfModule(entryPointFile);\n    if (exports === null) {\n      return { module: entryPointFile, exportMap: null };\n    }\n    const exportMap = /* @__PURE__ */ new Map();\n    for (const [name, declaration] of exports) {\n      if (exportMap.has(declaration.node)) {\n        const existingExport = exportMap.get(declaration.node);\n        if (isNamedDeclaration(declaration.node) && declaration.node.name.text === existingExport) {\n          continue;\n        }\n      }\n      exportMap.set(declaration.node, name);\n    }\n    return { module: entryPointFile, exportMap };\n  }\n};\nvar LogicalProjectStrategy = class {\n  constructor(reflector, logicalFs) {\n    this.reflector = reflector;\n    this.logicalFs = logicalFs;\n    this.relativePathStrategy = new RelativePathStrategy(this.reflector);\n  }\n  emit(ref, context, importFlags) {\n    const destSf = getSourceFile(ref.node);\n    const destPath = this.logicalFs.logicalPathOfSf(destSf);\n    if (destPath === null) {\n      if (destSf.isDeclarationFile && importFlags & ImportFlags.AllowRelativeDtsImports) {\n        return this.relativePathStrategy.emit(ref, context);\n      }\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The file ${destSf.fileName} is outside of the configured 'rootDir'.`\n      };\n    }\n    const originPath = this.logicalFs.logicalPathOfSf(context);\n    if (originPath === null) {\n      throw new Error(`Debug assert: attempt to import from ${context.fileName} but it's outside the program?`);\n    }\n    if (destPath === originPath) {\n      return null;\n    }\n    const name = findExportedNameOfNode(ref.node, destSf, this.reflector);\n    if (name === null) {\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The symbol is not exported from ${destSf.fileName}.`\n      };\n    }\n    const moduleName = LogicalProjectPath.relativePathBetween(originPath, destPath);\n    return {\n      kind: 0,\n      expression: new ExternalExpr({ moduleName, name }),\n      importedFile: destSf\n    };\n  }\n};\nvar RelativePathStrategy = class {\n  constructor(reflector) {\n    this.reflector = reflector;\n  }\n  emit(ref, context) {\n    const destSf = getSourceFile(ref.node);\n    const relativePath = relative(dirname(absoluteFromSourceFile(context)), absoluteFromSourceFile(destSf));\n    const moduleName = toRelativeImport(stripExtension(relativePath));\n    const name = findExportedNameOfNode(ref.node, destSf, this.reflector);\n    if (name === null) {\n      return {\n        kind: 1,\n        ref,\n        context,\n        reason: `The symbol is not exported from ${destSf.fileName}.`\n      };\n    }\n    return {\n      kind: 0,\n      expression: new ExternalExpr({ moduleName, name }),\n      importedFile: destSf\n    };\n  }\n};\nvar UnifiedModulesStrategy = class {\n  constructor(reflector, unifiedModulesHost) {\n    this.reflector = reflector;\n    this.unifiedModulesHost = unifiedModulesHost;\n  }\n  emit(ref, context) {\n    const destSf = getSourceFile(ref.node);\n    const name = findExportedNameOfNode(ref.node, destSf, this.reflector);\n    if (name === null) {\n      return null;\n    }\n    const moduleName = this.unifiedModulesHost.fileNameToModuleName(destSf.fileName, context.fileName);\n    return {\n      kind: 0,\n      expression: new ExternalExpr({ moduleName, name }),\n      importedFile: destSf\n    };\n  }\n};\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/alias.mjs\nvar CHARS_TO_ESCAPE = /[^a-zA-Z0-9/_]/g;\nvar UnifiedModulesAliasingHost = class {\n  constructor(unifiedModulesHost) {\n    this.unifiedModulesHost = unifiedModulesHost;\n    this.aliasExportsInDts = false;\n  }\n  maybeAliasSymbolAs(ref, context, ngModuleName, isReExport) {\n    if (!isReExport) {\n      return null;\n    }\n    return this.aliasName(ref.node, context);\n  }\n  getAliasIn(decl, via, isReExport) {\n    if (!isReExport) {\n      return null;\n    }\n    const moduleName = this.unifiedModulesHost.fileNameToModuleName(via.fileName, via.fileName);\n    return new ExternalExpr2({ moduleName, name: this.aliasName(decl, via) });\n  }\n  aliasName(decl, context) {\n    const declModule = this.unifiedModulesHost.fileNameToModuleName(decl.getSourceFile().fileName, context.fileName);\n    const replaced = declModule.replace(CHARS_TO_ESCAPE, \"_\").replace(/\\//g, \"$\");\n    return \"\\u0275ng$\" + replaced + \"$$\" + decl.name.text;\n  }\n};\nvar PrivateExportAliasingHost = class {\n  constructor(host) {\n    this.host = host;\n    this.aliasExportsInDts = true;\n  }\n  maybeAliasSymbolAs(ref, context, ngModuleName) {\n    if (ref.hasOwningModuleGuess) {\n      return null;\n    }\n    const exports = this.host.getExportsOfModule(context);\n    if (exports === null) {\n      throw new Error(`Could not determine the exports of: ${context.fileName}`);\n    }\n    let found = false;\n    exports.forEach((value) => {\n      if (value.node === ref.node) {\n        found = true;\n      }\n    });\n    if (found) {\n      return null;\n    }\n    return `\\u0275ngExport\\u0275${ngModuleName}\\u0275${ref.node.name.text}`;\n  }\n  getAliasIn() {\n    return null;\n  }\n};\nvar AliasStrategy = class {\n  emit(ref, context, importMode) {\n    if (importMode & ImportFlags.NoAliasing || ref.alias === null) {\n      return null;\n    }\n    return {\n      kind: 0,\n      expression: ref.alias,\n      importedFile: \"unknown\"\n    };\n  }\n};\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/util/src/path.mjs\nfunction relativePathBetween(from, to) {\n  const relativePath = stripExtension(relative(dirname(resolve(from)), resolve(to)));\n  return relativePath !== \"\" ? toRelativeImport(relativePath) : null;\n}\nfunction normalizeSeparators(path) {\n  return path.replace(/\\\\/g, \"/\");\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/core.mjs\nvar NoopImportRewriter = class {\n  shouldImportSymbol(symbol, specifier) {\n    return true;\n  }\n  rewriteSymbol(symbol, specifier) {\n    return symbol;\n  }\n  rewriteSpecifier(specifier, inContextOfFile) {\n    return specifier;\n  }\n};\nvar CORE_SUPPORTED_SYMBOLS = /* @__PURE__ */ new Map([\n  [\"\\u0275\\u0275defineInjectable\", \"\\u0275\\u0275defineInjectable\"],\n  [\"\\u0275\\u0275defineInjector\", \"\\u0275\\u0275defineInjector\"],\n  [\"\\u0275\\u0275defineNgModule\", \"\\u0275\\u0275defineNgModule\"],\n  [\"\\u0275\\u0275setNgModuleScope\", \"\\u0275\\u0275setNgModuleScope\"],\n  [\"\\u0275\\u0275inject\", \"\\u0275\\u0275inject\"],\n  [\"\\u0275\\u0275FactoryDeclaration\", \"\\u0275\\u0275FactoryDeclaration\"],\n  [\"\\u0275setClassMetadata\", \"setClassMetadata\"],\n  [\"\\u0275\\u0275InjectableDeclaration\", \"\\u0275\\u0275InjectableDeclaration\"],\n  [\"\\u0275\\u0275InjectorDeclaration\", \"\\u0275\\u0275InjectorDeclaration\"],\n  [\"\\u0275\\u0275NgModuleDeclaration\", \"\\u0275\\u0275NgModuleDeclaration\"],\n  [\"\\u0275NgModuleFactory\", \"NgModuleFactory\"],\n  [\"\\u0275noSideEffects\", \"\\u0275noSideEffects\"]\n]);\nvar CORE_MODULE = \"@angular/core\";\nvar R3SymbolsImportRewriter = class {\n  constructor(r3SymbolsPath) {\n    this.r3SymbolsPath = r3SymbolsPath;\n  }\n  shouldImportSymbol(symbol, specifier) {\n    return true;\n  }\n  rewriteSymbol(symbol, specifier) {\n    if (specifier !== CORE_MODULE) {\n      return symbol;\n    }\n    return validateAndRewriteCoreSymbol(symbol);\n  }\n  rewriteSpecifier(specifier, inContextOfFile) {\n    if (specifier !== CORE_MODULE) {\n      return specifier;\n    }\n    const relativePathToR3Symbols = relativePathBetween(inContextOfFile, this.r3SymbolsPath);\n    if (relativePathToR3Symbols === null) {\n      throw new Error(`Failed to rewrite import inside ${CORE_MODULE}: ${inContextOfFile} -> ${this.r3SymbolsPath}`);\n    }\n    return relativePathToR3Symbols;\n  }\n};\nfunction validateAndRewriteCoreSymbol(name) {\n  if (!CORE_SUPPORTED_SYMBOLS.has(name)) {\n    throw new Error(`Importing unexpected symbol ${name} while compiling ${CORE_MODULE}`);\n  }\n  return CORE_SUPPORTED_SYMBOLS.get(name);\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/patch_alias_reference_resolution.mjs\nimport ts4 from \"typescript\";\nvar patchedReferencedAliasesSymbol = Symbol(\"patchedReferencedAliases\");\nfunction loadIsReferencedAliasDeclarationPatch(context) {\n  if (!isTransformationContextWithEmitResolver(context)) {\n    throwIncompatibleTransformationContextError();\n  }\n  const emitResolver = context.getEmitResolver();\n  const existingReferencedAliases = emitResolver[patchedReferencedAliasesSymbol];\n  if (existingReferencedAliases !== void 0) {\n    return existingReferencedAliases;\n  }\n  const originalIsReferencedAliasDeclaration = emitResolver.isReferencedAliasDeclaration;\n  if (originalIsReferencedAliasDeclaration === void 0) {\n    throwIncompatibleTransformationContextError();\n  }\n  const referencedAliases = /* @__PURE__ */ new Set();\n  emitResolver.isReferencedAliasDeclaration = function(node, ...args) {\n    if (isAliasImportDeclaration(node) && referencedAliases.has(node)) {\n      return true;\n    }\n    return originalIsReferencedAliasDeclaration.call(emitResolver, node, ...args);\n  };\n  return emitResolver[patchedReferencedAliasesSymbol] = referencedAliases;\n}\nfunction isAliasImportDeclaration(node) {\n  return ts4.isImportSpecifier(node) || ts4.isNamespaceImport(node) || ts4.isImportClause(node);\n}\nfunction isTransformationContextWithEmitResolver(context) {\n  return context.getEmitResolver !== void 0;\n}\nfunction throwIncompatibleTransformationContextError() {\n  throw Error(\"Angular compiler is incompatible with this version of the TypeScript compiler.\\n\\nIf you recently updated TypeScript and this issue surfaces now, consider downgrading.\\n\\nPlease report an issue on the Angular repositories when this issue surfaces and you are using a supposedly compatible TypeScript version.\");\n}\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/default.mjs\nvar DefaultImportDeclaration = Symbol(\"DefaultImportDeclaration\");\nfunction attachDefaultImportDeclaration(expr, importDecl) {\n  expr[DefaultImportDeclaration] = importDecl;\n}\nfunction getDefaultImportDeclaration(expr) {\n  var _a;\n  return (_a = expr[DefaultImportDeclaration]) != null ? _a : null;\n}\nvar DefaultImportTracker = class {\n  constructor() {\n    this.sourceFileToUsedImports = /* @__PURE__ */ new Map();\n  }\n  recordUsedImport(importDecl) {\n    if (importDecl.importClause) {\n      const sf = getSourceFile(importDecl);\n      if (!this.sourceFileToUsedImports.has(sf.fileName)) {\n        this.sourceFileToUsedImports.set(sf.fileName, /* @__PURE__ */ new Set());\n      }\n      this.sourceFileToUsedImports.get(sf.fileName).add(importDecl.importClause);\n    }\n  }\n  importPreservingTransformer() {\n    return (context) => {\n      let clausesToPreserve = null;\n      return (sourceFile) => {\n        const clausesForFile = this.sourceFileToUsedImports.get(sourceFile.fileName);\n        if (clausesForFile !== void 0) {\n          for (const clause of clausesForFile) {\n            if (clausesToPreserve === null) {\n              clausesToPreserve = loadIsReferencedAliasDeclarationPatch(context);\n            }\n            clausesToPreserve.add(clause);\n          }\n        }\n        return sourceFile;\n      };\n    };\n  }\n};\n\n// bazel-out/darwin_arm64-fastbuild/bin/packages/compiler-cli/src/ngtsc/imports/src/resolver.mjs\nvar ModuleResolver = class {\n  constructor(program, compilerOptions, host, moduleResolutionCache) {\n    this.program = program;\n    this.compilerOptions = compilerOptions;\n    this.host = host;\n    this.moduleResolutionCache = moduleResolutionCache;\n  }\n  resolveModule(moduleName, containingFile) {\n    const resolved = resolveModuleName(moduleName, containingFile, this.compilerOptions, this.host, this.moduleResolutionCache);\n    if (resolved === void 0) {\n      return null;\n    }\n    return getSourceFileOrNull(this.program, absoluteFrom(resolved.resolvedFileName));\n  }\n};\n\nexport {\n  ErrorCode,\n  COMPILER_ERRORS_WITH_GUIDES,\n  replaceTsWithNgInErrors,\n  ngErrorCode,\n  FatalDiagnosticError,\n  makeDiagnostic,\n  makeDiagnosticChain,\n  makeRelatedInformation,\n  addDiagnosticChain,\n  ERROR_DETAILS_PAGE_BASE_URL,\n  ExtendedTemplateDiagnosticName,\n  isSymbolWithValueDeclaration,\n  isDtsPath,\n  isNonDeclarationTsPath,\n  isFromDtsFile,\n  nodeNameForError,\n  getSourceFile,\n  getSourceFileOrNull,\n  getTokenAtPosition,\n  identifierOfNode,\n  isDeclaration,\n  getRootDirs,\n  nodeDebugInfo,\n  isAssignment,\n  toUnredirectedSourceFile,\n  ImportFlags,\n  assertSuccessfulReferenceEmit,\n  ReferenceEmitter,\n  LocalIdentifierStrategy,\n  AbsoluteModuleStrategy,\n  LogicalProjectStrategy,\n  RelativePathStrategy,\n  UnifiedModulesStrategy,\n  UnifiedModulesAliasingHost,\n  PrivateExportAliasingHost,\n  AliasStrategy,\n  relativePathBetween,\n  normalizeSeparators,\n  NoopImportRewriter,\n  R3SymbolsImportRewriter,\n  loadIsReferencedAliasDeclarationPatch,\n  isAliasImportDeclaration,\n  attachDefaultImportDeclaration,\n  getDefaultImportDeclaration,\n  DefaultImportTracker,\n  Reference,\n  ModuleResolver\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}