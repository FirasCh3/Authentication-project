{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_p_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_p_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"Minimum length of password is 8\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_p_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1, \"This user does not exist\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  ngOnInit() {\n    localStorage.removeItem(\"token\");\n  }\n  constructor(Request, router) {\n    this.Request = Request;\n    this.router = router;\n    this.group = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    }, [], this.restricted.bind(this));\n  }\n  UserDoesNotExist(UserData, UserInput) {\n    let i = 0;\n    let UserExistenceTest = false;\n    while (i < UserData.length && !UserExistenceTest) {\n      if (UserInput.email == UserData[i].email && UserInput.password == UserData[i].password) {\n        UserExistenceTest = true;\n      } else {\n        i++;\n      }\n    }\n    return UserExistenceTest;\n  }\n  restricted(control) {\n    let observable = this.Request.GetAllUsers().pipe(map(data => {\n      if (!this.UserDoesNotExist(data, control.value)) {\n        return {\n          error: false\n        };\n      } else {\n        return null;\n      }\n    }));\n    return observable;\n  }\n  submit(info) {\n    this.Request.Login(info).subscribe(response => {\n      if (response != null) {\n        localStorage.setItem('token', response.token);\n        this.router.navigate([\"/home\"]).then();\n      }\n    });\n  }\n  SignUp() {\n    this.router.navigate([\"/signup\"]).then();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.httpRequests), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 29,\n  vars: 6,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"ie=edge\"], [1, \"row\"], [1, \"mx-auto\", \"col-10\", \"col-md-8\", \"col-lg-6\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"exampleInputEmail1\"], [\"formControlName\", \"email\", \"name\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"class\", \"alert alert-danger p-1\", 4, \"ngIf\"], [\"for\", \"exampleInputPassword1\"], [\"formControlName\", \"password\", \"name\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"class\", \"alert alert-danger p1\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mx-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"alert\", \"alert-danger\", \"p-1\"], [1, \"alert\", \"alert-danger\", \"p1\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n      i0.ɵɵelementStart(5, \"title\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"body\")(8, \"div\", 4)(9, \"div\", 5)(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.submit(ctx.group.value);\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵtemplate(15, LoginComponent_p_15_Template, 2, 0, \"p\", 10);\n      i0.ɵɵtemplate(16, LoginComponent_p_16_Template, 2, 0, \"p\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 12);\n      i0.ɵɵtemplate(21, LoginComponent_p_21_Template, 2, 0, \"p\", 10);\n      i0.ɵɵtemplate(22, LoginComponent_p_22_Template, 2, 0, \"p\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵtemplate(24, LoginComponent_p_24_Template, 2, 0, \"p\", 13);\n      i0.ɵɵelementStart(25, \"button\", 14);\n      i0.ɵɵtext(26, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_27_listener() {\n        return ctx.SignUp();\n      });\n      i0.ɵɵtext(28, \"Sign up\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.group);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.group.get(\"email\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.group.get(\"email\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.group.get(\"email\")) == null ? null : tmp_1_0.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.group.get(\"email\")) == null ? null : tmp_2_0.hasError(\"email\")) && ((tmp_2_0 = ctx.group.get(\"email\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.group.get(\"email\")) == null ? null : tmp_2_0.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.group.get(\"password\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"required\"]) && ((tmp_3_0 = ctx.group.get(\"password\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.group.get(\"password\")) == null ? null : tmp_3_0.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.group.get(\"password\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"minlength\"]) && ((tmp_4_0 = ctx.group.get(\"password\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.group.get(\"password\")) == null ? null : tmp_4_0.dirty));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (ctx.group.errors == null ? null : ctx.group.errors[\"error\"]) == false);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","ngOnInit","localStorage","removeItem","constructor","Request","router","group","email","required","password","minLength","restricted","bind","UserDoesNotExist","UserData","UserInput","i","UserExistenceTest","length","control","observable","GetAllUsers","pipe","data","value","error","submit","info","Login","subscribe","response","setItem","token","navigate","then","SignUp","ɵɵdirectiveInject","i1","httpRequests","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_10_listener","ɵɵtemplate","LoginComponent_p_15_Template","LoginComponent_p_16_Template","LoginComponent_p_21_Template","LoginComponent_p_22_Template","LoginComponent_p_24_Template","LoginComponent_Template_button_click_27_listener","ɵɵadvance","ɵɵproperty","tmp_1_0","get","hasError","touched","dirty","tmp_2_0","tmp_3_0","errors","tmp_4_0"],"sources":["C:\\Users\\user\\Desktop\\SpringBootProject\\src\\main\\resources\\my-app\\src\\app\\login\\login.component.ts","C:\\Users\\user\\Desktop\\SpringBootProject\\src\\main\\resources\\my-app\\src\\app\\login\\login.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {httpRequests} from \"../http\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {map, Observable} from \"rxjs\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  ngOnInit() {\n    localStorage.removeItem(\"token\");\n  }\n\n  constructor(private Request:httpRequests,private router:Router) {\n  }\n  group=new FormGroup({\n    email:new FormControl(null,[Validators.required,Validators.email]),\n    password:new FormControl(null,[Validators.required,Validators.minLength(8)])\n  },[],this.restricted.bind(this));\n  UserDoesNotExist(UserData:any,UserInput:any):boolean{\n    let i=0;\n    let UserExistenceTest:boolean=false;\n    while(i<UserData.length && !UserExistenceTest){\n      if(UserInput.email==UserData[i].email && UserInput.password==UserData[i].password){\n        UserExistenceTest=true;\n      }else{\n        i++;\n      }\n    }\n    return UserExistenceTest;\n  }\n  restricted(control:AbstractControl):Promise<any>|Observable<any>{\n    let observable=this.Request.GetAllUsers().pipe(map(data=>{\n      if(!this.UserDoesNotExist(data,control.value)){\n        return({error:false})\n      }else{\n        return null;\n      }\n    }))\n    return observable;\n  }\n  submit(info:any){\n      this.Request.Login(info).subscribe((response:any)=>{\n        if(response!=null){\n          localStorage.setItem('token',response.token);\n          this.router.navigate([\"/home\"]).then();\n        }\n      })\n  }\n  SignUp(){\n    this.router.navigate([\"/signup\"]).then();\n  }\n}\n","<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\"\n        content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Login</title>\n  <script src=\"https://code.jquery.com/jquery-3.7.0.js\" integrity=\"sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM=\" crossorigin=\"anonymous\"></script>\n</head>\n<body>\n<div class=\"row\">\n  <div class=\"mx-auto col-10 col-md-8 col-lg-6\">\n    <form [formGroup]=\"group\"  (ngSubmit)=\"submit(group.value)\">\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input formControlName=\"email\" name=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        <p class=\"alert alert-danger p-1\" *ngIf=\"group.get('email')?.hasError('required') && group.get('email')?.touched && group.get('email')?.dirty \">email is required</p>\n        <p class=\"alert alert-danger p-1\" *ngIf=\"group.get('email')?.hasError('email') && group.get('email')?.touched && group.get('email')?.dirty \">email is invalid</p>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input formControlName=\"password\"  name=\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n        <p class=\"alert alert-danger p-1\" *ngIf=\"group.get('password')?.errors?.['required'] && group.get('password')?.touched && group.get('password')?.dirty \">password is required</p>\n        <p class=\"alert alert-danger p-1\" *ngIf=\"group.get('password')?.errors?.['minlength'] && group.get('password')?.touched && group.get('password')?.dirty \">Minimum length of password is 8</p>\n      </div><br>\n      <p class=\"alert alert-danger p1\" *ngIf=\"group.errors?.['error']==false\">This user does not exist</p>\n      <button  type=\"submit\" class=\"btn btn-primary mx-2\">Login</button>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"SignUp()\">Sign up</button>\n\n    </form>\n  </div>\n</div>\n</body>\n</html>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}