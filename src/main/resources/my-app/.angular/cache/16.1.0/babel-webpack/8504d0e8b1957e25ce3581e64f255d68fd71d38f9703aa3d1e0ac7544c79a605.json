{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (localStorage.getItem('token') == 'true') {\n      return true;\n    } else {\n      console.log(\"aaa\");\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac\n});","map":{"version":3,"names":["AuthGuard","constructor","router","canActivate","route","state","localStorage","getItem","console","log","i0","ɵɵinject","i1","Router","factory","ɵfac"],"sources":["C:\\Users\\user\\Desktop\\SpringBootProject\\src\\main\\resources\\my-app\\src\\app\\auth\\AuthGuardService.ts"],"sourcesContent":["import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {Observable} from \"rxjs\";\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private router:Router) {\r\n  }\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean| UrlTree  {\r\n    if(localStorage.getItem('token')=='true'){\r\n      return true;\r\n    }else{\r\n      console.log(\"aaa\");\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AAIA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAa;IAAb,KAAAA,MAAM,GAANA,MAAM;EAC1B;EACAC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAE,MAAM,EAAC;MACvC,OAAO,IAAI;KACZ,MAAI;MACHC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClB,OAAO,KAAK;;EAEhB;;AAVWT,SAAS,C;mBAATA,SAAS,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAATb,SAAS,C;SAATA,SAAS;EAAAc,OAAA,EAATd,SAAS,CAAAe;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}