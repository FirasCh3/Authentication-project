{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nexport let SignupComponent = class SignupComponent {\n  constructor(Request) {\n    this.Request = Request;\n    this.group = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required),\n      passwordconfirm: new FormControl('', [Validators.required], this.CheckPassword.bind(this)),\n      CheckBox: new FormControl('')\n    }, [], this.Validate.bind(this));\n  }\n  CheckPassword(control) {\n    let promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let password = this.group.controls.password.value;\n        if (password && control.value && password != control.value) {\n          resolve({\n            PassError: \"invalid\"\n          });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n    return promise;\n  }\n  CheckEmail(result, email) {\n    if (email == '') {\n      return true;\n    }\n    let ok = true;\n    result.forEach(function (element) {\n      if (element.email == email) {\n        ok = false;\n      }\n    });\n    return ok;\n  }\n  Validate(control) {\n    let results;\n    this.Request.GetAllUsers().subscribe(data => {\n      results = data;\n    });\n    console.log(results);\n    let promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log(this.group.controls.email.value);\n        if (!this.CheckEmail(results, control.value.email)) {\n          resolve({\n            EmailError: \"true\"\n          });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n    return promise;\n  }\n  submit() {\n    console.log(this.group);\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","SignupComponent","constructor","Request","group","name","required","email","password","passwordconfirm","CheckPassword","bind","CheckBox","Validate","control","promise","Promise","resolve","reject","setTimeout","controls","value","PassError","CheckEmail","result","ok","forEach","element","results","GetAllUsers","subscribe","data","console","log","EmailError","submit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\user\\Desktop\\SpringBootProject\\src\\main\\resources\\my-app\\src\\app\\signup\\signup.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {resolve} from \"@angular/compiler-cli\";\nimport {httpRequests} from \"../http\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n  constructor(private Request:httpRequests) {\n  }\n  group=new FormGroup({\n    name:new FormControl('',[Validators.required]),\n    email:new FormControl('',[Validators.required,Validators.email]),\n    password:new FormControl('',Validators.required),\n    passwordconfirm:new FormControl('',[Validators.required],this.CheckPassword.bind(this)),\n    CheckBox:new FormControl('')\n  },[],this.Validate.bind(this));\n  CheckPassword(control:AbstractControl):Promise<any>|Observable<any>{\n    let promise=new Promise((resolve,reject)=>{\n      setTimeout(()=>{\n        let password=this.group.controls.password.value;\n        if(password && control.value && password!=control.value){\n          resolve({PassError:\"invalid\"});\n        }else{\n          resolve(null);\n        }\n\n      },1000)\n\n\n    })\n    return promise;\n  }\n  CheckEmail(result:any,email:any):boolean{\n    if(email==''){\n      return true;\n    }\n    let ok:boolean=true;\n    result.forEach(function (element:any){\n      if(element.email==email){\n        ok=false;\n      }\n    })\n    return ok;\n  }\n  Validate(control:AbstractControl):Promise<any>|Observable<any>{\n    let results:any\n    this.Request.GetAllUsers().subscribe((data)=>{\n       results=data;\n    })\n    console.log(results);\n    let promise=new Promise((resolve,reject)=>{\n      setTimeout(()=>{\n        console.log(this.group.controls.email.value);\n        if(!this.CheckEmail(results,control.value.email)){\n          resolve({EmailError:\"true\"})\n        }\n        else{\n          resolve(null);\n        }\n      },1000)\n\n\n    })\n    return promise;\n  }\n  submit(){\n    console.log(this.group);\n\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}