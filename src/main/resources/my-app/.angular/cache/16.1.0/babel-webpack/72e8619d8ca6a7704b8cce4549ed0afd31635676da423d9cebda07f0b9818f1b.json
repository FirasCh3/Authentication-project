{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"email does not exist\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor(Request) {\n    this.Request = Request;\n    this.group = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email], this.restricted.bind(this)),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    });\n  }\n  UserDoesNotExist(UserData, UserInput) {\n    let UserExists = false;\n    let i = 0;\n    while (i < UserData.length && UserExists) {\n      if (UserInput == UserData[i].email) {\n        UserExists = true;\n      } else {\n        i++;\n      }\n    }\n    return UserExists;\n  }\n  restricted(control) {\n    let UserData;\n    this.Request.GetAllUsers().subscribe(data => {\n      UserData = data;\n    });\n    let promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let UserInput = control.value;\n        if (this.UserDoesNotExist(UserData, UserInput) == false) {\n          resolve({\n            error: \"email does not exist\"\n          });\n        } else {\n          resolve({\n            error: true\n          });\n        }\n      }, 1000);\n    });\n    return promise;\n  }\n  submit() {\n    console.log(this.group);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.httpRequests));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 27,\n  vars: 3,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"ie=edge\"], [1, \"row\"], [1, \"mx-auto\", \"col-10\", \"col-md-8\", \"col-lg-6\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"exampleInputEmail1\"], [\"formControlName\", \"email\", \"name\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"exampleInputPassword1\"], [\"formControlName\", \"password\", \"name\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"Password\", 1, \"form-control\"], [2, \"color\", \"red\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mx-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"], [1, \"text-danger\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n      i0.ɵɵelementStart(5, \"title\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"body\")(8, \"div\", 4)(9, \"div\", 5)(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵtemplate(15, AppComponent_p_15_Template, 2, 0, \"p\", 10);\n      i0.ɵɵtemplate(16, AppComponent_p_16_Template, 2, 0, \"p\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 12)(21, \"p\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"button\", 14);\n      i0.ɵɵtext(24, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 15);\n      i0.ɵɵtext(26, \"Sign up\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.group);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.group.get(\"email\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.group.get(\"email\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.group.get(\"email\")) == null ? null : tmp_1_0.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.group.get(\"email\")) == null ? null : tmp_2_0.hasError(\"restricted\"));\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AppComponent","constructor","Request","group","email","required","restricted","bind","password","minLength","UserDoesNotExist","UserData","UserInput","UserExists","i","length","control","GetAllUsers","subscribe","data","promise","Promise","resolve","reject","setTimeout","value","error","submit","console","log","ɵɵdirectiveInject","i1","httpRequests","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","AppComponent_Template_form_ngSubmit_10_listener","ɵɵtemplate","AppComponent_p_15_Template","AppComponent_p_16_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","hasError","touched","dirty","tmp_2_0"],"sources":["C:\\Users\\user\\Desktop\\SpringBootProject\\src\\main\\resources\\my-app\\src\\app\\app.component.ts","C:\\Users\\user\\Desktop\\SpringBootProject\\src\\main\\resources\\my-app\\src\\app\\app.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\nimport {httpRequests} from \"./http\";\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent{\n  constructor(private Request:httpRequests) {\n  }\n  group=new FormGroup({\n    email:new FormControl(null,[Validators.required,Validators.email],this.restricted.bind(this)),\n    password:new FormControl(null,[Validators.required,Validators.minLength(8)])\n  });\n  UserDoesNotExist(UserData:any,UserInput:any):Boolean{\n      let UserExists:Boolean=false;\n      let i=0;\n      while(i<UserData.length && UserExists){\n        if(UserInput==UserData[i].email){\n          UserExists=true;\n        }else{\n          i++;\n        }\n      }\n\n      return UserExists;\n  }\n  restricted(control:AbstractControl):Promise<any>|Observable<any>{\n      let UserData:any;\n      this.Request.GetAllUsers().subscribe((data)=>{\n         UserData=data;\n\n      })\n      let promise = new Promise((resolve, reject) => {\n\n      setTimeout(() => {\n          let UserInput = control.value;\n          if(this.UserDoesNotExist(UserData,UserInput)==false){\n            resolve({error:\"email does not exist\"})\n          }else{\n            resolve({error:true})\n          }\n\n\n\n      }, 1000)\n    });\n    return promise;\n  }\n  submit(){\n    console.log(this.group)\n  }\n}\n","<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\"\n        content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Login</title>\n  <script src=\"https://code.jquery.com/jquery-3.7.0.js\" integrity=\"sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM=\" crossorigin=\"anonymous\"></script>\n</head>\n<body>\n<div class=\"row\">\n  <div class=\"mx-auto col-10 col-md-8 col-lg-6\">\n    <form [formGroup]=\"group\" (ngSubmit)=\"submit()\">\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input formControlName=\"email\" name=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n        <p class=\"text-danger\" *ngIf=\"group.get('email')?.hasError('required') && group.get('email')?.touched && group.get('email')?.dirty \">email is required</p>\n        <p class=\"text-danger\" *ngIf=\"group.get('email')?.hasError('restricted')\">email does not exist</p>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input formControlName=\"password\"  name=\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n        <p style=\"color: red\"></p>\n      </div><br>\n      <button type=\"submit\" class=\"btn btn-primary mx-2\">Login</button>\n      <button type=\"button\" class=\"btn btn-primary\">Sign up</button>\n    </form>\n  </div>\n</div>\n</body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}