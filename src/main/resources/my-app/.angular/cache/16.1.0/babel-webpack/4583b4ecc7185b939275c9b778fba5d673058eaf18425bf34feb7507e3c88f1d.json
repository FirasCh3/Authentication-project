{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class SignupComponent {\n  constructor() {\n    this.group = new FormGroup({\n      name: new FormControl(null, [Validators.required]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, Validators.required),\n      passwordconfirm: new FormControl(null, [], this.CheckPassword.bind(this))\n    });\n  }\n  CheckPassword(control) {\n    let promise = new Promise((resolve, reject) => {\n      console.log(control.value);\n    });\n    return promise;\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)();\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 9,\n  vars: 1,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"ie=edge\"], [3, \"formGroup\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n      i0.ɵɵelementStart(5, \"title\");\n      i0.ɵɵtext(6, \"Signup\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"body\");\n      i0.ɵɵelement(8, \"form\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.group);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","SignupComponent","constructor","group","name","required","email","password","passwordconfirm","CheckPassword","bind","control","promise","Promise","resolve","reject","console","log","value","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\user\\Desktop\\SpringBootProject\\src\\main\\resources\\my-app\\src\\app\\signup\\signup.component.ts","C:\\Users\\user\\Desktop\\SpringBootProject\\src\\main\\resources\\my-app\\src\\app\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n  group=new FormGroup({\n    name:new FormControl(null,[Validators.required]),\n    email:new FormControl(null,[Validators.required,Validators.email]),\n    password:new FormControl(null,Validators.required),\n    passwordconfirm:new FormControl(null,[],this.CheckPassword.bind(this))\n  })\n  CheckPassword(control:AbstractControl):Promise<any>|Observable<any>{\n\n    let promise=new Promise((resolve,reject)=>{\n      console.log(control.value)\n    })\n    return promise;\n  }\n}\n","<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\"\n        content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Signup</title>\n</head>\n<body>\n  <form [formGroup]=\"group\">\n    \n  </form>\n</body>\n</html>\n"],"mappings":"AACA,SAAyBA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;;;AAQlF,OAAM,MAAOC,eAAe;EAL5BC,YAAA;IAME,KAAAC,KAAK,GAAC,IAAIJ,SAAS,CAAC;MAClBK,IAAI,EAAC,IAAIN,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACK,QAAQ,CAAC,CAAC;MAChDC,KAAK,EAAC,IAAIR,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACK,QAAQ,EAACL,UAAU,CAACM,KAAK,CAAC,CAAC;MAClEC,QAAQ,EAAC,IAAIT,WAAW,CAAC,IAAI,EAACE,UAAU,CAACK,QAAQ,CAAC;MAClDG,eAAe,EAAC,IAAIV,WAAW,CAAC,IAAI,EAAC,EAAE,EAAC,IAAI,CAACW,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC;KACtE,CAAC;;EACFD,aAAaA,CAACE,OAAuB;IAEnC,IAAIC,OAAO,GAAC,IAAIC,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAG;MACxCC,OAAO,CAACC,GAAG,CAACN,OAAO,CAACO,KAAK,CAAC;IAC5B,CAAC,CAAC;IACF,OAAON,OAAO;EAChB;;AAbWX,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;QAAfA,eAAe;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR5BE,EAAA,CAAAC,cAAA,cAAgB;MAEdD,EAAA,CAAAE,SAAA,cAAsB;MAItBF,EAAA,CAAAC,cAAA,YAAO;MAAAD,EAAA,CAAAG,MAAA,aAAM;MAAAH,EAAA,CAAAI,YAAA,EAAQ;MAEvBJ,EAAA,CAAAC,cAAA,WAAM;MACJD,EAAA,CAAAE,SAAA,cAEO;MACTF,EAAA,CAAAI,YAAA,EAAO;;;MAHCJ,EAAA,CAAAK,SAAA,GAAmB;MAAnBL,EAAA,CAAAM,UAAA,cAAAP,GAAA,CAAAvB,KAAA,CAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}